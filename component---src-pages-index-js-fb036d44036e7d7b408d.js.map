{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/@restart/context/forwardRef.js","webpack:///./node_modules/react-bootstrap/esm/ThemeProvider.js","webpack:///./node_modules/react-bootstrap/esm/Container.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/components/codeAdvent20180101.js","webpack:///./src/components/codeAdvent20180102.js","webpack:///./src/components/codeAdvent20180201.js","webpack:///./src/components/codeAdvent20180202.js","webpack:///./src/components/codeAdvent20180301.js","webpack:///./src/components/codeAdvent20180401.js","webpack:///./src/components/codeAdvent20180402.js","webpack:///./src/components/codeAdvent20180501.js","webpack:///./src/components/codeAdvent20180502.js","webpack:///./src/components/codeAdvent20180601.js","webpack:///./src/components/codeAdvent20180602.js","webpack:///./src/components/codeAdvent20180701.js","webpack:///./src/pages/index.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["$export","$entries","S","entries","it","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","this","piRE","fiU","undefined","constructor","source","call","proxy","key","configurable","get","set","keys","i","length","exports","__esModule","renderFn","_temp","_ref","propTypes","defaultProps","_ref$allowFallback","allowFallback","_ref$displayName","displayName","name","render","props","ref","Object","assign","_react","forwardRef","obj","ThemeContext","createContext","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","prefixes","Container","bsPrefix","fluid","_ref$as","as","Component","className","createElement","Row","noGutters","_props$as","otherProps","decoratedBsPrefix","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","apply","concat","CodeAdvent20180101","useState","data","frequencyChanges","setFrequencyChanges","recalibration","setRecalibration","handleClick","result","map","item","index","handleReset","handleRandomize","randomLength","Math","floor","random","newArray","console","log","JSON","stringify","style","fontWeight","backgroundColor","onClick","CodeAdvent20180102","array","0","setResult","duplicate","sum","uniques","proceed","CodeAdvent20180201","boxIDs","checkSum","setCheckSum","infoObject","countTwos","countThrees","totalLetterCount","twoProceed","threeProceed","position","string","letterCount","a","b","c","d","e","g","h","j","k","l","m","n","o","q","r","s","t","u","v","w","x","y","z","returnLetterCount","twos","threes","arrayOfCounts","CodeAdvent20180202","correctBoxIDs","setCorrectBoxIDs","input","resultString","letterComparison","letterSum","letter","differenceIndex","slicedArray1","slicedArray2","pos","number","slice","CodeAdvent20180301","claims","overlaps","setOverlaps","uniqueClaim","setUniqueClaim","fabric","claimsArray","id","indexOf","horizontalOffset","verticalOffset","rectangleWidth","rectangleHeight","textile","numberOfOverlaps","claim","row","parseInt","column","line","col","unique","cloth","claimZ","uniqueID","area","countArea","getUnique","computation","checkFabric","CodeAdvent20180401","observations","finalNumber","count","times","totalMinutesPerDay","uniqueGuards","observe","uniqueArray","includes","checkUniqueGuards","maxSleepId","totalSleeping","maxSleepTime","guard","totalMinutesCount","timeLine","guy","dataSet","maxSleeper","dayStatistics","minute","day","maxDayID","maxDay","value","analyzeDays","strategyAnalysis","initialGuardIndex","sortedObservations","sort","countGuards","iteratedGuards","counter","resultArray","dictionary","something","event","Date","getHours","setDate","getDate","date","minutes","subsequentGuardIndex","iterate","endReached","sleepStarts","sleepEnds","min","minEnd","sleepCycle","time","computeObservations","CodeAdvent20180402","maxMinuteID","frequencyArray","minuteFrequency","timeStamp","singleMinute","maxGuardID","maxMinuteCount","iteration","CodeAdvent20180501","introPolymer","output","units","inputPolymer","element","part1","part2","recursion","split","arrayCapital","toUpperCase","combinations","char","char2","generateArray","CodeAdvent20180502","resultsArray","dict","replacingChar","re","replace","poly","polymer","len","entry","polymerize","CodeAdvent20180601","introCoordinates","coordinates","max","maximumRow","maximumColumn","emptyMap","coordinatesArray","distanceMap","eliminatedCoordinates","maxRow","maxColumn","findMax","maxR","maxC","coordinateMap","newRow","Array","generateField","coord","idsLower","idsUpper","idsArray","enrichedCoordinates","areaCount","generateIDs","mapWithCoords","arrayWithCoords","distanceArray","coordY","coordX","distances","minDistance","dist","coordInstance","pointDistance","abs","minValue","minIDs","calculateDistances","field","coords","populateCoordinates","eliminated","eliminateEdgeCoordinates","areaArray","maxID","areaName","getLargestArea","dic","calculateAreas","CodeAdvent20180602","distanceDict","sumDist","CodeAdvent20180701","instructions","steps","stepsDict","deptDict","edgeEnd","edgeStart","edge","nodeEnd","nodeStart","node","generateDict","sortedKeys","dictKey","generateSortedDependenciesArray","topologicalSort","borderBottom","sm","margin","textAlign","color","href","fontSize","maxWidth","hasOwn","hasOwnProperty","classNames","arguments","arg","argType","isArray","inner","join","module","DESCRIPTORS","getKeys","toIObject","isEnum","isEntries","O","_extends","target","_objectWithoutPropertiesLoose","excluded","sourceKeys"],"mappings":"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","file":"component---src-pages-index-js-fb036d44036e7d7b408d.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nexports.__esModule = true;\nexports[\"default\"] = forwardRef;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction forwardRef(renderFn, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      propTypes = _ref.propTypes,\n      defaultProps = _ref.defaultProps,\n      _ref$allowFallback = _ref.allowFallback,\n      allowFallback = _ref$allowFallback === void 0 ? false : _ref$allowFallback,\n      _ref$displayName = _ref.displayName,\n      displayName = _ref$displayName === void 0 ? renderFn.name || renderFn.displayName : _ref$displayName;\n\n  var render = function render(props, ref) {\n    return renderFn(props, ref);\n  };\n\n  return Object.assign(_react[\"default\"].forwardRef || !allowFallback ? _react[\"default\"].forwardRef(render) : function (props) {\n    return render(props, null);\n  }, {\n    displayName: displayName,\n    propTypes: propTypes,\n    defaultProps: defaultProps\n  });\n}","import \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport forwardRef from '@restart/context/forwardRef';\nimport React, { useContext, useMemo } from 'react';\nvar ThemeContext = React.createContext({});\nvar Consumer = ThemeContext.Consumer,\n    Provider = ThemeContext.Provider;\n\nfunction ThemeProvider(_ref) {\n  var prefixes = _ref.prefixes,\n      children = _ref.children;\n  var copiedPrefixes = useMemo(function () {\n    return _extends({}, prefixes);\n  }, [prefixes]);\n  return React.createElement(Provider, {\n    value: copiedPrefixes\n  }, children);\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  var prefixes = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  var isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  var _opts = opts,\n      prefix = _opts.prefix,\n      _opts$forwardRefAs = _opts.forwardRefAs,\n      forwardRefAs = _opts$forwardRefAs === void 0 ? isClassy ? 'ref' : 'innerRef' : _opts$forwardRefAs;\n  return forwardRef(function (_ref2, ref) {\n    var props = _extends({}, _ref2);\n\n    props[forwardRefAs] = ref; // eslint-disable-next-line react/prop-types\n\n    var bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return React.createElement(Component, _extends({}, props, {\n      bsPrefix: bsPrefix\n    }));\n  }, {\n    displayName: \"Bootstrap(\" + (Component.displayName || Component.name) + \")\"\n  });\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? prefix + \"-fluid\" : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.defaultProps = defaultProps;\nexport default Row;","import \"core-js/modules/es6.array.for-each\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201801.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180101 = () => {\n  const [frequencyChanges, setFrequencyChanges] = useState(data);\n  const [recalibration, setRecalibration] = useState(0);\n\n  function handleClick() {\n    let result = recalibration;\n    frequencyChanges.map((item, index) => {\n      result = result + item;\n    });\n    setRecalibration(result);\n  }\n\n  function handleReset() {\n    setRecalibration(0);\n  }\n\n  function handleRandomize() {\n    let randomLength = Math.floor(Math.random() * 10) + 1;\n    var newArray = [];\n    console.log(\"Random length is:\", randomLength);\n\n    for (let i = 0; i <= randomLength; i++) {\n      //why concat wont work??\n      newArray.push(Math.floor(Math.random() * 100) + 1);\n      console.log(\"i is: \", i);\n    }\n    console.log(JSON.stringify(newArray));\n    setFrequencyChanges(newArray);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Frequency Calibration:</p>\n      <p>Recalibrated freuqency is: {recalibration} </p>\n      <button style={{ backgroundColor: \"#6BAA75\" }} onClick={handleClick}><span onClick={handleClick}>Calibrate</span>\n      </button>\n      <button style={{ backgroundColor: \"#A7A7A9\" }} onClick={handleReset}>\n      <span  onClick={handleReset}>Reset </span>\n      </button>\n      <button style={{ backgroundColor: \"#69747C\" }} onClick={handleRandomize}>\n      <span onClick={handleRandomize}>Randomize </span>\n      </button>\n      \n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201801.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180102 = () => {\n  const [array, setArray] = useState(data);\n  const [total, setTotal] = useState(0);\n  const [uniq, setUniq] = useState({ 0: 1 });\n  const [result, setResult] = useState();\n  const [goOn, setGoOn] = useState(true);\n\n  function handleClick() {\n    let sum = 0;\n    let uniques = { 0: 1 };\n    let duplicate;\n    let proceed = true;\n    let i = 0;\n\n    while (proceed && i < 140) {\n      i = i + 1;\n      array.map((item, index) => {\n        sum = sum + item;\n\n        if (uniques[sum] == 1 && proceed == true) {\n          proceed = false;\n          duplicate = sum;\n          console.log(\"FAAALSE\");\n        } else {\n        }\n        uniques[sum] = 1;\n      });\n      console.log(i);\n    }\n    setResult(duplicate);\n  }\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>\n        Find duplicate frequencies:\n      </p>\n      <p>Duplicate frequencies are: {JSON.stringify(result)}</p>\n      <button style={{ backgroundColor: \"#69747C\" }} onClick={handleClick}>\n      <span onClick={handleClick}>Find Duplicates</span>\n      </button>\n      \n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201802.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180201 = () => {\n  const [boxIDs, setboxIDs] = useState(data);\n  const [checkSum, setCheckSum] = useState();\n\n  function handleClick() {\n    setCheckSum(checkSumcalculation(boxIDs));\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Boxes checksum:</p>\n      {/* <p>Boxes Ids: {JSON.stringify(boxIDs)}</p> */}\n      <p>CheckSum: {JSON.stringify(checkSum)}</p>\n      <button style={{ backgroundColor: \"#6BAA75\" }} onClick={handleClick}>\n      <span onClick={handleClick}>Calculate</span>\n      </button>\n    </div>\n  );\n};\n\nfunction returnLetterCount(string) {\n  let letterCount = {\n    a: 0,\n    b: 0,\n    c: 0,\n    d: 0,\n    e: 0,\n    f: 0,\n    g: 0,\n    h: 0,\n    i: 0,\n    j: 0,\n    k: 0,\n    l: 0,\n    m: 0,\n    n: 0,\n    o: 0,\n    p: 0,\n    q: 0,\n    r: 0,\n    s: 0,\n    t: 0,\n    u: 0,\n    v: 0,\n    w: 0,\n    x: 0,\n    y: 0,\n    z: 0\n  };\n\n  for (let i = 0; i < string.length; i++) {\n    letterCount[string[i]] = letterCount[string[i]] + 1;\n  }\n  return letterCount;\n}\n\nfunction returnArrayOfCounts(array) {\n  let countTwos = 0;\n  let countThrees = 0;\n  let totalLetterCount = [];\n  array.map((item, index) => {\n    let twoProceed = true;\n    let threeProceed = true;\n    let position = returnLetterCount(item);\n    let keys = Object.keys(position);\n    keys.map((key, i) => {\n      if (position[key] == 2 && twoProceed) {\n        countTwos += 1;\n        twoProceed = false;\n      } else if (position[key] == 3 && threeProceed) {\n        countThrees += 1;\n        threeProceed = false;\n      } else {\n      }\n    });\n    totalLetterCount.push(position);\n  });\n  console.log(\"Twos are \", countTwos, \"Threes are \", countThrees);\n  // return totalLetterCount;\n  return {\n    twos: countTwos,\n    threes: countThrees,\n    arrayOfCounts: totalLetterCount\n  };\n}\n\nfunction checkSumcalculation(input) {\n  let infoObject = returnArrayOfCounts(input);\n  console.log(infoObject);\n\n  return infoObject.twos * infoObject.threes;\n}\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201802.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180202 = () => {\n  const [boxIDs, setboxIDs] = useState(data);\n  const [correctBoxIDs, setCorrectBoxIDs] = useState();\n\n  function handleClick() {\n    let result = checkIDs(boxIDs);\n    setCorrectBoxIDs(result);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Compare Box IDs:</p>\n      <p>Matching Box IDs {JSON.stringify(correctBoxIDs)}</p>\n      <button style={{ backgroundColor: \"#A7A7A9\" }} onClick={handleClick}>\n      <span onClick={handleClick}>Correct IDs</span>\n      </button>\n    </div>\n  );\n};\n\nfunction checkIDs(input) {\n  let resultString;\n  input.forEach((item, index) => {\n    console.log(index);\n    for (let i = index + 1; i < input.length; i++) {\n      let letterComparison = [];\n      let letterSum = 0;\n      for (let letter = 0; letter < item.length; letter++) {\n        if (item[letter] == input[i][letter]) {\n          letterComparison.push(1);\n          letterSum = letterSum + 1;\n        } else {\n          letterComparison.push(0);\n        }\n      }\n\n      if (letterSum == item.length - 1) {\n        console.log(\"I AM TH WINNER\", item, input[i]);\n        console.log(letterComparison);\n        let differenceIndex;\n        let slicedArray1;\n        let slicedArray2;\n        letterComparison.map((pos, number) => {\n          if (pos == 0) {\n            differenceIndex = number;\n            console.log(\"Difference index is\", differenceIndex);\n            slicedArray1 = item.slice(0, differenceIndex);\n            slicedArray2 = item.slice(differenceIndex + 1, item.length);\n            console.log(slicedArray1, slicedArray2);\n            resultString = slicedArray1.concat(slicedArray2);\n          } else {\n          }\n        });\n      }\n    }\n  });\n\n  return resultString;\n}\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201803.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180301 = () => {\n  const [claims, setClaims] = useState(data);\n  const [overlaps, setOverlaps] = useState();\n  const [uniqueClaim, setUniqueClaim] = useState();\n\n  function handleClick() {\n    let result = checkFabric(claims);\n    setOverlaps(result[0]);\n    setUniqueClaim(result[1]);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Santa Fabric Overlaps:</p>\n      <p>Number of overlaps: {JSON.stringify(overlaps)}</p>\n      <p>Unique claim: {JSON.stringify(uniqueClaim)}</p>\n      <button style={{ backgroundColor: \"#69747C\" }} onClick={handleClick}>\n      <span onClick={handleClick}>Check Overlaps</span>\n      </button>\n    </div>\n  );\n};\n\nfunction checkFabric(input) {\n  let fabricWidth = 1000;\n  let fabricHeight = 1000;\n  let fabric = [];\n  let claimsArray = [];\n\n  for (let i = 0; i < fabricHeight; i++) {\n    fabric.push([]);\n    for (let j = 0; j < fabricWidth; j++) {\n      fabric[i].push(0);\n    }\n  }\n  //console.log(fabric);\n\n  for (let i = 0; i < input.length; i++) {\n    let id = input[i].slice(1, input[i].indexOf(\" @\"));\n    let horizontalOffset = input[i].slice(\n      input[i].indexOf(\"@ \") + 2,\n      input[i].indexOf(\",\")\n    );\n    let verticalOffset = input[i].slice(\n      input[i].indexOf(\",\") + 1,\n      input[i].indexOf(\":\")\n    );\n    let rectangleWidth = input[i].slice(\n      input[i].indexOf(\": \") + 2,\n      input[i].indexOf(\"x\")\n    );\n    let rectangleHeight = input[i].slice(input[i].indexOf(\"x\") + 1);\n    //  console.log(id);\n    //  console.log(horizontalOffset);\n    //  console.log(verticalOffset);\n    //  console.log(rectangleWidth);\n    //  console.log(rectangleHeight);\n    claimsArray.push([\n      id,\n      horizontalOffset,\n      verticalOffset,\n      rectangleWidth,\n      rectangleHeight\n    ]);\n  }\n  //console.log(claimsArray);\n\n  let output = computation(fabric, claimsArray);\n\n  return output;\n}\n\nfunction computation(textile, claims) {\n  let numberOfOverlaps = 0;\n  //console.log(textile);\n  for (let claim = 0; claim < claims.length; claim++) {\n    //  console.log(claims[claim]);\n    for (\n      let row = parseInt(claims[claim][2]);\n      row < parseInt(claims[claim][2]) + parseInt(claims[claim][4]);\n      row++\n    ) {\n      //    console.log(\"row is\", row);\n\n      for (\n        let column = parseInt(claims[claim][1]);\n        column < parseInt(claims[claim][1]) + parseInt(claims[claim][3]);\n        column++\n      ) {\n        //  console.log(\"column is\", column);\n        textile[row][column] = textile[row][column] + 1;\n      }\n    }\n  }\n  //console.log(textile);\n  for (let line = 0; line < textile.length; line++) {\n    for (let col = 0; col < textile[line].length; col++) {\n      //  console.log(line, col);\n      if (textile[line][col] > 1) {\n        numberOfOverlaps = numberOfOverlaps + 1;\n      } else {\n      }\n    }\n  }\n  let unique = getUnique(textile, claims);\n  //console.log(numberOfOverlaps);\n  return [numberOfOverlaps, unique];\n}\n\nfunction getUnique(cloth, claimZ) {\n  let uniqueID;\n  for (let claim = 0; claim < claimZ.length; claim++) {\n    let isOverlapping = true;\n    let area = parseInt(claimZ[claim][3]) * parseInt(claimZ[claim][4]);\n    let countArea = 0;\n    //  console.log(\"area is\", area);\n    //  console.log(claimZ[claim]);\n    for (\n      let row = parseInt(claimZ[claim][2]);\n      row < parseInt(claimZ[claim][2]) + parseInt(claimZ[claim][4]);\n      row++\n    ) {\n      //    console.log(\"row is\", row);\n\n      for (\n        let column = parseInt(claimZ[claim][1]);\n        column < parseInt(claimZ[claim][1]) + parseInt(claimZ[claim][3]);\n        column++\n      ) {\n        //      console.log(\"column is\", column);\n        if (cloth[row][column] == 1) {\n          countArea = countArea + 1;\n        } else {\n        }\n      }\n    }\n    if (area == countArea) {\n      uniqueID = claimZ[claim][0];\n      console.log(\"uniqueID is:\", uniqueID);\n    }\n  }\n\n  return uniqueID;\n}\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201804.json\";\n//import data from \"./AdventCodeInputs/test.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180401 = () => {\n/*  const [observations, setObservations] = useState([\"[1518-11-02 00:40] falls asleep\",\n  \"[1518-01-30 00:55] wakes up\",\n  \"[1518-12-24 00:02] Guard #8 begins shift\",\n  \"[1518-10-08 00:45] falls asleep\",\n  \"[1518-12-25 00:42] falls asleep\", \n  \"[1518-12-03 00:05] Guard #5 begins shift\",\n  \"[1518-10-08 00:37] falls asleep\",\n  \"[1518-12-30 23:58] Guard #225 begins shift\",\n  \"[1518-01-30 00:03] Guard #109 begins shift\",\n  \"[1518-11-01 23:58] Guard #225 begins shift\",\n  \"[1518-12-24 00:45] falls asleep\", \n  \"[1518-11-24 00:35] falls asleep\", \n  \"[1518-11-24 00:02] Guard #8 begins shift\",\n  \"[1518-12-24 00:59] wakes up\",\n  \"[1518-01-30 00:45] falls asleep\",\n  \"[1518-10-08 00:00] Guard #1000 begins shift\",\n  \"[1518-11-24 00:55] wakes up\",\n  \"[1518-12-03 00:49] wakes up\",\n  \"[1518-12-25 00:46] wakes up\",\n  \"[1518-11-06 00:03] Guard #9 begins shift\",\n  \"[1518-10-08 00:55] wakes up\",\n  \"[1518-10-08 00:44] wakes up\",\n  \"[1518-12-31 00:30] falls asleep\",\n  \"[1518-12-31 00:50] wakes up\",\n  \"[1518-12-03 00:34] falls asleep\",\n  \"[1518-12-24 23:52] Guard #8 begins shift\",\n  \"[1518-11-02 00:50] wakes up\",\n  ]\n  );\n  \n*/\n  const [observations, setObservations] = useState(data);\n  const [result, setResult] = useState();\n\n  function handleClick() {\n  //  debugger;\n    let output = computeObservations(observations);\n    let finalNumber= strategyAnalysis(output);\n    setResult(finalNumber);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Guards Observation:</p>\n      <p>ID * Minutes: {JSON.stringify(result)}</p>\n      <button style={{ backgroundColor: \"#6BAA75\" }}>\n        <span onClick={handleClick}>Get Strategy1</span>\n      </button>\n    </div>\n  );\n};\n\nfunction computeObservations(input) {\n  \n  let sortedObservations = input.sort();\n//console.log(sortedObservations);\n  let countGuards=0;\n  let iteratedGuards=0;\n  for (let counter =0; counter < sortedObservations.length; counter++) {\n   if (sortedObservations[counter].includes(\"Guard\")) {\n      countGuards+=1;\n   }\n  }\n\n  //console.log(\"countGuards is: \", countGuards)\n  let initialGuardIndex;\n  var resultArray=[];\n  for (let row = 0; row < sortedObservations.length; row++) {\n     \n    var dictionary = {};\n    //console.log(\"row iterations\", row)\n    if (sortedObservations[row].includes(\"Guard\")) {       \n      initialGuardIndex = row;\n      iteratedGuards+=1;\n\n      let year = sortedObservations[row].slice(1, sortedObservations[row].indexOf(\"-\"));\n      let month = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"-\") + 1,\n        sortedObservations[row].indexOf(\"-\", sortedObservations[row].indexOf(\"-\") + 1)\n      );\n      let day = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"-\", sortedObservations[row].indexOf(\"-\") + 1) + 1,\n        sortedObservations[row].indexOf(\" \")\n      );\n      let hour = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\" \") + 1,\n        sortedObservations[row].indexOf(\":\")\n      );\n      let minute = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\":\") + 1,\n        sortedObservations[row].indexOf(\"]\")\n      );\n\n      let something = sortedObservations[row].slice(\n        1,\n        sortedObservations[row].indexOf(\"]\")\n      )+\":00\";\n     \n      \n      var event = new Date(something);\n      console.log(event);\n     \n\n      if(event.getHours()==23){\n        event.setDate(event.getDate() + 1)\n\n      }else {\n\n      }\n      dictionary.date = event;\n\n  //  console.log(\"Dict data year is:\", dictionary.date.getFullYear());\n  //  console.log(\"Dict data DATE is:\", dictionary.date.getDate());\n\n      dictionary.id = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"#\") + 1,\n        sortedObservations[row].indexOf(\" \", sortedObservations[row].indexOf(\"#\"))\n      );\n      let minutes=[];\n      for (let minute=0; minute<60; minute++){\n       minutes.push(0);\n      }\n      dictionary.times=minutes;\n\nlet subsequentGuardIndex;\n    let iterate=true;\n    let endReached =false;\n    if (iteratedGuards==countGuards){\n      endReached=true;\n    }\n\n    for (let line=row+1; line<sortedObservations.length; line++){\n      if ((sortedObservations[line].includes(\"Guard\") && iterate) || endReached){\n        if (!endReached){\n          subsequentGuardIndex=line;\n        } else{\n          subsequentGuardIndex=sortedObservations.length;\n        }\n        iterate =false;\n      }}\n\n        var sleepStarts=[];\n        var sleepEnds=[];\n        \n          for (let n=initialGuardIndex +1; n<subsequentGuardIndex; n++){\n              if (sortedObservations[n].includes(\"asleep\")){\n              \n              let min = parseInt(sortedObservations[n].slice(\n                sortedObservations[n].indexOf(\":\") + 1,\n                sortedObservations[n].indexOf(\"]\")));\n               sleepStarts.push(min);\n             \n              }\n          }\n          for (let m=initialGuardIndex +1; m<subsequentGuardIndex; m++){\n            if (sortedObservations[m].includes(\"wakes\")){\n            \n\n            let minEnd = parseInt(sortedObservations[m].slice(\n              sortedObservations[m].indexOf(\":\") + 1,\n              sortedObservations[m].indexOf(\"]\")));\n              sleepEnds.push(minEnd);\n         //    console.log(\"input n\",input[m]);\n         //    console.log(\"min\", minEnd);\n         //    console.log(dictionary.date);\n         //    console.log(\"sleep ends\",sleepEnds);\n            }\n        }\n      //  console.log(\"sleep starts\", sleepStarts);\n       \n        for (let sleepCycle=0;sleepCycle<sleepStarts.length;sleepCycle++){\n        for (let time=sleepStarts[sleepCycle]; time<sleepEnds[sleepCycle]; time++){\n        //  debugger;\n          dictionary.times[time]=dictionary.times[time]+1;\n        //  console.log(\"sleep cycle:\", sleepCycle, \"time:\", time, \"dict\", dictionary.times);\n        }\n      }\n\n\n    } else {\n\n    }\n\n\n    \n  if (Object.entries(dictionary).length>0){\n  resultArray.push(dictionary);\n  }\n  }\n  console.log(resultArray);\n  return resultArray;\n}\n\nfunction strategyAnalysis(input){\n  for (let i=0; i<input.length;i++){\n    let count=0;\n    for (let j=0;j<input[i].times.length;j++){\n    count=count+input[i].times[j];\n    }\n    input[i].totalMinutesPerDay=count;\n  }\nconsole.log(\"INPUT TO STRATEGY ANALYSIS IS: \", input);\n\nlet uniqueGuards=checkUniqueGuards(input);\nconsole.log(\"unique guards aree:\",uniqueGuards);\n//debugger;\nlet totalSleeping=[];\nlet maxSleepTime=0;\nlet maxSleepId;\nfor(let guard=0;guard<uniqueGuards.length; guard++){\n  let totalMinutesCount=0;\n  \n  for (let timeLine=0;timeLine<input.length; timeLine++){\n    if (input[timeLine].id==uniqueGuards[guard]){\n    //  debugger;\n      totalMinutesCount=totalMinutesCount+input[timeLine].totalMinutesPerDay;\n    }\n    \n  }\n  totalSleeping.push(totalMinutesCount);\n  //console.log(\"total minutesCount\",totalMinutesCount);\n  \n  console.log(\"total minutes count\", totalSleeping);\n}\nfor (let guy=0;guy<uniqueGuards.length;guy++){\nif (totalSleeping[guy] >maxSleepTime){\n  maxSleepTime=totalSleeping[guy];\n  maxSleepId=uniqueGuards[guy];\n}\n}\n//console.log(\"total sleeping times\", totalSleeping);\nconsole.log(\"maxSleeptime\", maxSleepTime);\nconsole.log(\"maxSleepID\", maxSleepId);\n\nlet finalCalculation=analyzeDays(input, maxSleepId);\n//console.log(analyzedDay);\n  return finalCalculation;\n}\n\nfunction checkUniqueGuards(observe){\n  var uniqueArray=[];\n  for (let i=0; i<observe.length;i++)\n    if (!uniqueArray.includes(observe[i].id)){\n      uniqueArray.push(observe[i].id);\n\n    }\n   // console.log(uniqueArray);\n  return uniqueArray;\n}\n\nfunction analyzeDays(dataSet, maxSleeper){\n  let dayStatistics=[];\n      for (let minute=0; minute<60; minute++){\n       dayStatistics.push(0);\n      }\nfor (let row=0;row<dataSet.length;row++){\n//  debugger;\nif (parseInt(dataSet[row].id)==maxSleeper){\n  for (let day=0;day<dataSet[row].times.length;day++)\n   dayStatistics[day]=dayStatistics[day]+dataSet[row].times[day];\n}\n}\n//console.log(dataSet);\n//console.log(dayStatistics);\n\nlet maxDay=0;\nlet maxDayID;\nfor (let value=0;value<dayStatistics.length;value++){\n  if (dayStatistics[value]>maxDay){\n    maxDay=dayStatistics[value];\n    maxDayID=value;\n  }\n}\nconsole.log(\"max day value\", maxDay, \"max day ID\", maxDayID);\nconsole.log(\"max sleepr\",maxSleeper);\nlet finalResult=maxDayID*maxSleeper;\n\n//console.log(finalResult);\n  return finalResult;\n}","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201804.json\";\n//import data from \"./AdventCodeInputs/test.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180402 = () => {\n/*  const [observations, setObservations] = useState([\"[1518-11-02 00:40] falls asleep\",\n  \"[1518-01-30 00:55] wakes up\",\n  \"[1518-12-24 00:02] Guard #8 begins shift\",\n  \"[1518-10-08 00:45] falls asleep\",\n  \"[1518-12-25 00:42] falls asleep\", \n  \"[1518-12-03 00:05] Guard #5 begins shift\",\n  \"[1518-10-08 00:37] falls asleep\",\n  \"[1518-12-30 23:58] Guard #225 begins shift\",\n  \"[1518-01-30 00:03] Guard #109 begins shift\",\n  \"[1518-11-01 23:58] Guard #225 begins shift\",\n  \"[1518-12-24 00:45] falls asleep\", \n  \"[1518-11-24 00:35] falls asleep\", \n  \"[1518-11-24 00:02] Guard #8 begins shift\",\n  \"[1518-12-24 00:59] wakes up\",\n  \"[1518-01-30 00:45] falls asleep\",\n  \"[1518-10-08 00:00] Guard #1000 begins shift\",\n  \"[1518-11-24 00:55] wakes up\",\n  \"[1518-12-03 00:49] wakes up\",\n  \"[1518-12-25 00:46] wakes up\",\n  \"[1518-11-06 00:03] Guard #9 begins shift\",\n  \"[1518-10-08 00:55] wakes up\",\n  \"[1518-10-08 00:44] wakes up\",\n  \"[1518-12-31 00:30] falls asleep\",\n  \"[1518-12-31 00:50] wakes up\",\n  \"[1518-12-03 00:34] falls asleep\",\n  \"[1518-12-24 23:52] Guard #8 begins shift\",\n  \"[1518-11-02 00:50] wakes up\",\n  ]\n  );\n */ \n\n  const [observations, setObservations] = useState(data);\n  const [result, setResult] = useState();\n\n  function handleClick() {\n  //  debugger;\n    let output = computeObservations(observations);\n  //  console.log(output);\n    let finalNumber= strategyAnalysis(output);\n    setResult(finalNumber);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Guards Observation:</p>\n      <p>ID * Minutes: {JSON.stringify(result)}</p>\n      <button style={{ backgroundColor: \"#A7A7A9\" }}>\n        <span onClick={handleClick}>Get Strategy2</span>\n      </button>\n    </div>\n  );\n};\n\nfunction computeObservations(input) {\n  \n  let sortedObservations = input.sort();\n//console.log(sortedObservations);\n  let countGuards=0;\n  let iteratedGuards=0;\n  for (let counter =0; counter < sortedObservations.length; counter++) {\n   if (sortedObservations[counter].includes(\"Guard\")) {\n      countGuards+=1;\n   }\n  }\n\n  //console.log(\"countGuards is: \", countGuards)\n  let initialGuardIndex;\n  var resultArray=[];\n  for (let row = 0; row < sortedObservations.length; row++) {\n     \n    var dictionary = {};\n    //console.log(\"row iterations\", row)\n    if (sortedObservations[row].includes(\"Guard\")) {       \n      initialGuardIndex = row;\n      iteratedGuards+=1;\n\n      let year = sortedObservations[row].slice(1, sortedObservations[row].indexOf(\"-\"));\n      let month = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"-\") + 1,\n        sortedObservations[row].indexOf(\"-\", sortedObservations[row].indexOf(\"-\") + 1)\n      );\n      let day = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"-\", sortedObservations[row].indexOf(\"-\") + 1) + 1,\n        sortedObservations[row].indexOf(\" \")\n      );\n      let hour = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\" \") + 1,\n        sortedObservations[row].indexOf(\":\")\n      );\n      let minute = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\":\") + 1,\n        sortedObservations[row].indexOf(\"]\")\n      );\n\n      let something = sortedObservations[row].slice(\n        1,\n        sortedObservations[row].indexOf(\"]\")\n      )+\":00\";\n     \n      \n      var event = new Date(something);\n    //  console.log(event);\n     \n\n      if(event.getHours()==23){\n        event.setDate(event.getDate() + 1)\n\n      }else {\n\n      }\n      dictionary.date = event;\n\n  //  console.log(\"Dict data year is:\", dictionary.date.getFullYear());\n  //  console.log(\"Dict data DATE is:\", dictionary.date.getDate());\n\n      dictionary.id = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"#\") + 1,\n        sortedObservations[row].indexOf(\" \", sortedObservations[row].indexOf(\"#\"))\n      );\n      let minutes=[];\n      for (let minute=0; minute<60; minute++){\n       minutes.push(0);\n      }\n      dictionary.times=minutes;\n\nlet subsequentGuardIndex;\n    let iterate=true;\n    let endReached =false;\n    if (iteratedGuards==countGuards){\n      endReached=true;\n    }\n\n    for (let line=row+1; line<sortedObservations.length; line++){\n      if ((sortedObservations[line].includes(\"Guard\") && iterate) || endReached){\n        if (!endReached){\n          subsequentGuardIndex=line;\n        } else{\n          subsequentGuardIndex=sortedObservations.length;\n        }\n        iterate =false;\n      }}\n\n        var sleepStarts=[];\n        var sleepEnds=[];\n        \n          for (let n=initialGuardIndex +1; n<subsequentGuardIndex; n++){\n              if (sortedObservations[n].includes(\"asleep\")){\n              \n              let min = parseInt(sortedObservations[n].slice(\n                sortedObservations[n].indexOf(\":\") + 1,\n                sortedObservations[n].indexOf(\"]\")));\n               sleepStarts.push(min);\n             \n              }\n          }\n          for (let m=initialGuardIndex +1; m<subsequentGuardIndex; m++){\n            if (sortedObservations[m].includes(\"wakes\")){\n            \n\n            let minEnd = parseInt(sortedObservations[m].slice(\n              sortedObservations[m].indexOf(\":\") + 1,\n              sortedObservations[m].indexOf(\"]\")));\n              sleepEnds.push(minEnd);\n         //    console.log(\"input n\",input[m]);\n         //    console.log(\"min\", minEnd);\n         //    console.log(dictionary.date);\n         //    console.log(\"sleep ends\",sleepEnds);\n            }\n        }\n      //  console.log(\"sleep starts\", sleepStarts);\n       \n        for (let sleepCycle=0;sleepCycle<sleepStarts.length;sleepCycle++){\n        for (let time=sleepStarts[sleepCycle]; time<sleepEnds[sleepCycle]; time++){\n        //  debugger;\n          dictionary.times[time]=dictionary.times[time]+1;\n        //  console.log(\"sleep cycle:\", sleepCycle, \"time:\", time, \"dict\", dictionary.times);\n        }\n      }\n\n\n    } else {\n\n    }\n\n\n    \n  if (Object.entries(dictionary).length>0){\n  resultArray.push(dictionary);\n  }\n  }\n  //console.log(resultArray);\n  return resultArray;\n}\n\nfunction strategyAnalysis(input){\n  for (let i=0; i<input.length;i++){\n    let count=0;\n    for (let j=0;j<input[i].times.length;j++){\n    count=count+input[i].times[j];\n    }\n    input[i].totalMinutesPerDay=count;\n  }\n//console.log(\"INPUT TO STRATEGY ANALYSIS IS: \", input);\n\nlet uniqueGuards=checkUniqueGuards(input);\n//console.log(\"unique guards aree:\",uniqueGuards);\nlet frequencyArray=[];\nfor (let guard=0; guard<uniqueGuards.length;guard++){\n  let minuteFrequency=[];\n  for (let min=0; min<60; min++){\n    minuteFrequency.push(0);\n   }\n  // console.log(minuteFrequency);\n//console.log(\"guard\", guard);\n  for (let timeStamp=0;timeStamp<input.length;timeStamp++ ){\n    //console.log(\"timeStamp\", timeStamp);\n    //  console.log(\"min\", singleMinute);\n    if(input[timeStamp].id==uniqueGuards[guard]){\n      //console.log(\"i identified guard\",uniqueGuards[guard], input[timeStamp].id, \"in row\", timeStamp  )\n      \n      for (let singleMinute=0;singleMinute<input[timeStamp].times.length;singleMinute++){\n       minuteFrequency[singleMinute]=minuteFrequency[singleMinute]+input[timeStamp].times[singleMinute];\n      \n    }\n    }\n\n  }\n // console.log(minuteFrequency);\n  frequencyArray.push(minuteFrequency);\n}\n//console.log(\"frequency array\", frequencyArray);\n//debugger;\n/*let totalSleeping=[];\nlet maxSleepTime=0;\nlet maxSleepId;\nfor(let guard=0;guard<uniqueGuards.length; guard++){\n  let totalMinutesCount=0;\n  \n  for (let timeLine=0;timeLine<input.length; timeLine++){\n    if (input[timeLine].id==uniqueGuards[guard]){\n    //  debugger;\n      totalMinutesCount=totalMinutesCount+input[timeLine].totalMinutesPerDay;\n    }\n    \n  }\n  totalSleeping.push(totalMinutesCount);\n  //console.log(\"total minutesCount\",totalMinutesCount);\n  \n  //console.log(\"total minutes count\", totalSleeping);\n}\nfor (let guy=0;guy<uniqueGuards.length;guy++){\nif (totalSleeping[guy] >maxSleepTime){\n  maxSleepTime=totalSleeping[guy];\n  maxSleepId=uniqueGuards[guy];\n}\n}\n//console.log(\"total sleeping times\", totalSleeping);\n//console.log(\"maxSleeptime\", maxSleepTime);\n//console.log(\"maxSleepID\", maxSleepId);\n\nlet finalCalculation=analyzeDays(input, maxSleepId);\n//console.log(analyzedDay);\n*/\nlet maxMinuteID;\nlet maxMinuteCount=0;\nlet maxGuardID;\nfor (let iteration=0; iteration<frequencyArray.length; iteration++){\n  for (let m=0;m<frequencyArray[iteration].length; m++){\n    if (frequencyArray[iteration][m]>maxMinuteCount){\n    // debugger;\n     maxMinuteCount=frequencyArray[iteration][m];\n     maxMinuteID=m;\n     maxGuardID=uniqueGuards[iteration];\n    // console.log(\"Maxes\", maxMinuteID, maxMinuteCount, maxGuardID);\n    }\n  }\n}\nconsole.log(\"Maxes\", maxMinuteID, maxMinuteCount, maxGuardID);\nlet finalMultiplication=maxGuardID*maxMinuteID;\n  return finalMultiplication;\n}\n\nfunction checkUniqueGuards(observe){\n  var uniqueArray=[];\n  for (let i=0; i<observe.length;i++)\n    if (!uniqueArray.includes(observe[i].id)){\n      uniqueArray.push(observe[i].id);\n\n    }\n   // console.log(uniqueArray);\n  return uniqueArray;\n}\n\nfunction analyzeDays(dataSet, maxSleeper){\n  let dayStatistics=[];\n      for (let minute=0; minute<60; minute++){\n       dayStatistics.push(0);\n      }\nfor (let row=0;row<dataSet.length;row++){\n//  debugger;\nif (parseInt(dataSet[row].id)==maxSleeper){\n  for (let day=0;day<dataSet[row].times.length;day++)\n   dayStatistics[day]=dayStatistics[day]+dataSet[row].times[day];\n}\n}\n//console.log(dataSet);\n//console.log(dayStatistics);\n\nlet maxDay=0;\nlet maxDayID;\nfor (let value=0;value<dayStatistics.length;value++){\n  if (dayStatistics[value]>maxDay){\n    maxDay=dayStatistics[value];\n    maxDayID=value;\n  }\n}\n//console.log(\"max day value\", maxDay, \"max day ID\", maxDayID);\n//console.log(\"max sleepr\",maxSleeper);\nlet finalResult=maxDayID*maxSleeper;\n\n//console.log(finalResult);\n  return finalResult;\n}","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201805.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180501 = () => {\n//const [introPolymer, setIntroPolymer] = useState(data[0]);\n//const [introPolymer, setIntroPolymer] = useState(\"dabAcCaCBAcCcaDA\");\n// CORRECT ANSWER is dabCBAcaDA\n// const [introPolymer, setIntroPolymer] = useState(\"bAcCa\");\n// CORRECT ANSWER is b\n// const [introPolymer, setIntroPolymer] = useState(\"aabAAB\");\n // CORRECT ANSWER is aabAAB\n// const [introPolymer, setIntroPolymer] = useState(\"abAB\");\n// CORRECT ANSWER is abAB\n//const [introPolymer, setIntroPolymer] = useState(\"abBA\");\n// CORRECT ANSWER is \"\"\n// const [introPolymer, setIntroPolymer] = useState(\"aA\");\n// CORRECT ANSWER is \"\"\n//const [introPolymer, setIntroPolymer] = useState(\"ddDabAcCaCBAcCcaDAxXxXaAnMmN\");\n//  CORRECT ANSWER IS dabCBAcaDA\n//const [introPolymer, setIntroPolymer] = useState(\"cPJjuVWwWwvEeRrfdvXxawTHDFfPVpGWwgPNeeDvcCkzDmjEeJbOtggVvTlCPpysSy\");\n// CORRECT ANSWER IS cPufdvawTHDPVNeeDvkzDmbOtggTlCyy\n\nconst[introPolymer, setIntroPolymer] = useState(data[0]);\n\n  const [result, setResult] = useState();\n\n  function handleClick() {\n    let output=polymerize(introPolymer).length;\n   setResult(output);\n  }\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Polymerization:</p>\n      <p>Length of end polymer is: {result} </p>\n      <button style={{ backgroundColor: \"#69747C\" }} ><span onClick={handleClick}>Polymerize</span>\n      </button>\n      \n    </div>\n  );\n};\n\nfunction generateArray(){\nlet string =\"abcdefghijklmnopqrstuvwxyz\";\nlet array=string.split(\"\");\nlet arrayCapital=string.toUpperCase().split(\"\");\nlet combinations={};\nfor ( let i=0;i<array.length;i++){\n let char=array[i]+arrayCapital[i];\n let char2=arrayCapital[i]+array[i];\n// console.log(char, char2);\n combinations[char]=\"value\";\n combinations[char2]=\"value\";\n\n}\n//console.log(combinations);\nreturn combinations;\n}\n\nfunction polymerize(input){\n  let units= generateArray();\n // console.log(units);\n let inputPolymer=input;\n  let result = recursion(units, inputPolymer);\n // console.log(\"result is:\", result);\n  \n  return result;\n}\n\nfunction recursion (units, inputPolymer){\n  for (let j=0;j<inputPolymer.length-1;j++){\n   //console.log(\"iteration j=\", j);\n    let element = inputPolymer[j]+inputPolymer[j+1];\n  //  console.log(element);\n  //debugger;\n    if (units[element]==\"value\"){\n//console.log(\"i include\", element);\nlet part1 = inputPolymer.slice(0,j);\nlet part2 = inputPolymer.slice(j+2,inputPolymer.length);\ninputPolymer=part1+part2;\n//console.log (inputPolymer);\nj=j-2;\n//console.log(j)\n}\n  }\n  return inputPolymer\n}\n\n/* NOT FUNCTIONAL RECURSION FUNCTION after returning \nfunction recursion (units, inputPolymer){\n  let k=0;\n//  let newInputPolymer=inputPolymer;\n  if (k>inputPolymer.length-1){ \n    console.log(\"break out condition is triggered\");\n  return\n  };\n  if (k==inputPolymer.length-1) {\n    console.log(\"last condition is triggered\");\n    return inputPolymer};\n  for (let j=0;j<inputPolymer.length-1;j++){\n    debugger;\n    k=j;\n    console.log(\"iteration j=\", j);\n    let element = inputPolymer[j]+inputPolymer[j+1];\n  //  console.log(element);\n    if (units.includes(element)){\nconsole.log(\"i include\", element);\nlet part1 = inputPolymer.slice(0,j);\nlet part2 = inputPolymer.slice(j+2,inputPolymer.length);\ninputPolymer=part1+part2;\nconsole.log (inputPolymer);\nreturn recursion (units, inputPolymer);\n    }\n  }\nreturn inputPolymer;\n}\n*/\n\n/* nots from Samik: use for loop but add, break out clausee with BREAK\nuse scoped variabl above forloop to get indecx, for loop will wet that scopd variabl\noutside of for look I will sreate new string (do not mutatee original) and then I call reecursion again\nreturn recursion (units, newNEWarray) newNEWarray consist of part 1 and 2\n115 there shouldnt be 115 line not mor return !!!!!! will b rplaced by return reecursion\n\nline 93 is always 0 bcause it is BEFOR for loop, if should be aftr for loop\n\nwhen\n\n*/","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201805.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180502 = () => {\n// const [introPolymer, setIntroPolymer] = useState(\"dabAcCaCBAcCcaDA\");\n\n\nconst[introPolymer, setIntroPolymer] = useState(data[0]);\n\n  const [result, setResult] = useState();\n\n  function handleClick() {\n    let output=polymerize(introPolymer);\n   setResult(output);\n  }\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Polymerization:</p>\n      <p>Length of shortest polymer is: {result} </p>\n      <button style={{ backgroundColor: \"#6BAA75\" }} ><span onClick={handleClick}>Polymerize</span>\n      </button>\n      \n    </div>\n  );\n};\n\nfunction generateArray(array, arrayCapital){\nlet combinations={};\nfor ( let i=0;i<array.length;i++){\n let char=array[i]+arrayCapital[i];\n let char2=arrayCapital[i]+array[i];\n// console.log(char, char2);\n combinations[char]=\"value\";\n combinations[char2]=\"value\";\n\n}\n//console.log(combinations);\nreturn combinations;\n}\n\nfunction polymerize(input){\n  let string =\"abcdefghijklmnopqrstuvwxyz\";\n  let array=string.split(\"\");\n  let arrayCapital=string.toUpperCase().split(\"\");\n  let units= generateArray(array, arrayCapital);\nlet resultsArray=[];\nlet dict={}\nfor (let char=0; char<array.length;char++){\n  let dict={}\nlet replacingChar=array[char]+\"|\"+arrayCapital[char];\n  //console.log(\"replacing Char\", replacingChar);\n   var re = new RegExp(replacingChar,\"g\");\n   //console.log(\"regex\", re);\n   let newArray=input.replace(re, \"\");\n   //console.log(newArray);\n   var result = poly(units, newArray);\n  dict.letter=array[char];\n  dict.polymer=result;\n  dict.len=result.length;\n  //console.log(\"dict\", dict);\n  resultsArray.push(dict);\n // console.log(\"resultsArray\", resultsArray);\n\n}\nlet min=input.length;\nfor (let entry=0;entry<resultsArray.length;entry++){\n  if(resultsArray[entry].len<min){\n    min=resultsArray[entry].len;\n  }\n}\n//console.log(\"min\",min);\n  return min;\n}\n\nfunction poly (units, inputPolymer){\n\n\n  for (let j=0;j<inputPolymer.length-1;j++){\n   //console.log(\"iteration j=\", j);\n    let element = inputPolymer[j]+inputPolymer[j+1];\n  //  console.log(element);\n  //debugger;\n    if (units[element]==\"value\"){\n//console.log(\"i include\", element);\nlet part1 = inputPolymer.slice(0,j);\nlet part2 = inputPolymer.slice(j+2,inputPolymer.length);\ninputPolymer=part1+part2;\n//console.log (inputPolymer);\nj=j-2;\n//console.log(j)\n}\n  }\n  return inputPolymer\n}\n","import React, { useState } from \"react\";\r\nimport data from \"./AdventCodeInputs/CodeAdvent201806.json\";\r\nimport \"./component.css\";\r\n\r\nexport const CodeAdvent20180601 = () => {\r\nconst[introCoordinates, setIntroCoordinates] = useState(data);\r\n/*const[introCoordinates, setIntroCoordinates] = useState([\r\n[1, 1],\r\n[1, 6],\r\n[8, 3],\r\n[3, 4],\r\n[5, 5],\r\n[8, 9],\r\n]);\r\n*/\r\n\r\n  const [result, setResult] = useState();\r\n\r\n  function handleClick() {\r\n    let output=computeArea(introCoordinates);\r\n    setResult(output);\r\n  }\r\n  return (\r\n    <div>\r\n      <p style={{ fontWeight: \"bold\" }}>Chronal Coordinates:</p>\r\n      <p>Size of largest area: {result} </p>\r\n      <button style={{ backgroundColor: \"#A7A7A9\" }} ><span onClick={handleClick}>Compute area</span>\r\n      </button>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction computeArea(coordinates){\r\n  let max=findMax(coordinates);\r\n  let maximumRow=max[0];\r\n  let maximumColumn=max[1];\r\n  //console.log(\"maximum row:\", maximumRow, \"maximum column:\", maximumColumn);\r\n  let emptyMap=generateField(maximumRow, maximumColumn);\r\n  //console.log(\"empty map is\",emptyMap);\r\n\tlet coordinatesArray=generateIDs(coordinates);\r\n\t//console.log(\"coordinatesArray\", coordinatesArray)\r\n\tlet populatedMap=populateCoordinates(emptyMap, coordinatesArray);\r\n\t//console.log(\"populatedMap\", populatedMap);\r\n\tlet distanceMap=calculateDistances(populatedMap, coordinatesArray);\r\n\t//console.log(\"distanceMap\", distanceMap);\r\n  let eliminatedCoordinates=eliminateEdgeCoordinates(distanceMap);\r\n  let areaArray=calculateAreas(distanceMap, eliminatedCoordinates, coordinatesArray);\r\n  let largestArea=getLargestArea(areaArray);\r\n  //console.log(\"largest are name is\", largestArea[0], \"largest are count is\", largestArea[1]);\r\n\t\r\nreturn largestArea[1];\r\n}\r\n\r\nfunction findMax(input){\r\n\t//WORKS CORRECT\r\n  let maxRow=0;\r\n  let maxColumn=0;\r\n\tfor ( let i =0; i<input.length;i++){\r\n\t\tif (input[i][1]>maxRow){\r\n\t\t\tmaxRow=input[i][1];\r\n\t\t}\r\n\t\tif (input[i][0]>maxColumn){\r\n\t\t\tmaxColumn=input[i][0];\r\n\t\t}\r\n  //console.log(\"maxRow is: \", maxRow, \"maxColumn is:\", maxColumn);\r\n\t}\r\n  let outcome=[maxRow,maxColumn];\r\n  return outcome;\r\n}\r\n  \r\n  function generateField(maxR, maxC){\r\n\t\t//WORKS CORRECT\r\n\t\tlet coordinateMap=[];\r\n\t\t\r\n      for ( let y=0;y<=maxR;y++){\r\n\t\t//\t\tconsole.log(\"y\", y);\r\n\t\t\tlet newRow= new Array(maxC+1);\r\n\t\t//\tconsole.log(\"newRow\", newRow);\r\n\t    for ( let x=0; x<=maxC;x++){\r\n\t\t//\t\tconsole.log(\"x\", x);\r\n\t\t\t newRow[x]=0;\r\n\t\t//\t console.log(\"newrow x\", newRow[x])\r\n\t   }\r\n\t   coordinateMap.push(newRow);\r\n\t  // console.log(\"coordinateMap is\", coordinateMap);\r\n   }\r\n   return coordinateMap;\r\n  }\r\n  \r\n  function generateIDs(coord){\r\n\t\t//WORK CORRECT\r\n    let idsLower=\"abcdefghijklmnopqrstuvwxyz\";\r\n    let idsUpper=idsLower.toUpperCase();\r\n    let ids=idsLower+idsUpper;\r\n    //console.log(\"ids are\", ids);\r\n    let idsArray=ids.split(\"\");\r\n    //console.log(\"ids array is\", idsArray);\r\n\tlet enrichedCoordinates=[];\r\n\tfor (let line=0; line<coord.length; line++){\r\n\t\tlet dict={};\r\n\t\tdict.id=idsArray[line];\r\n\t\tdict.value=coord[line];\r\n\t\tdict.areaCount=0;\r\n\t\tenrichedCoordinates.push(dict);\r\n\t}\r\n\t//console.log(\"enrichedCoordinates are\", enrichedCoordinates);\r\n\treturn enrichedCoordinates;\r\n  }\r\n  \r\n  function populateCoordinates( field, coords){\r\n\t\t//WORKS CORRECT\r\n\t\t//console.log(\"field is\", field);\r\n\t\t//console.log(\"coords are\", coords);\r\n\tfor (let entry=0;entry<coords.length;entry++){\r\n\t  field[coords[entry].value[1]][coords[entry].value[0]]=coords[entry].id;\r\n\t}\r\n\t\r\n\treturn field;\r\n  }\r\n  \r\n  function calculateDistances(mapWithCoords, arrayWithCoords ){\r\n    // WORKS CORRECT\r\n    //console.log(\"mapWithCoords\", mapWithCoords,\"arrayWithCoords\",arrayWithCoords )\r\n\t\tlet distanceArray=[];\r\n\t\t\r\n\t  for (let r=0;r<mapWithCoords.length;r++){\r\n\t    for (let c=0; c<mapWithCoords[r].length; c++){\r\n\t      let distanceDict={};\r\n\t      distanceArray.coordY=r;\r\n\t      distanceArray.coordX=c;\r\n\t      distanceArray.value=mapWithCoords[r][c];\r\n\t\t\t\tdistanceArray.distances=[];\r\n\t\t\t\t\r\n\t     // console.log(\"distance array\", distanceArray);\r\n\t      let minDistance=mapWithCoords.length+mapWithCoords[0].length;\r\n\t\t    let minID;\r\n\t\t    let dist={}\r\n\t      for (let coordInstance=0;coordInstance<arrayWithCoords.length;coordInstance++){\r\n\t\t      if (mapWithCoords[r][c]==0){\r\n\t\t        let pointDistance=Math.abs(r-arrayWithCoords[coordInstance].value[1]) + Math.abs(c-arrayWithCoords[coordInstance].value[0]);\r\n\t\t        let value=arrayWithCoords[coordInstance].id;\r\n\t\t\t\t\t\tdist[value]=pointDistance;\r\n\t \r\n\t\t if (pointDistance<=minDistance){\r\n\t\t   minDistance=pointDistance;\r\n\t\t   minID=arrayWithCoords[coordInstance].id;\r\n\t\t }\r\n\t\t}\r\n\t\t}\r\n\t\tdistanceArray.distances=dist;\r\n\t\tdistanceArray.minValue=minDistance;\r\n\t\t\r\n\t\tlet minIDs=[];\r\n\t\t\r\n\t\tObject.keys(distanceArray.distances).forEach(key=>{\r\n\t\t//\tconsole.log(`${key} : ${distanceArray.distances[key]}`);\r\n     // debugger;\r\n\t\t\tif (distanceArray.distances[key]==minDistance){\r\n\t\t\t\tminIDs.push(key);\r\n\t\t\t}\r\n\t });\r\n\r\n\t\tdistanceArray.minIDs=minIDs;\r\n\t\t//debugger;\r\n\t\t//console.log(\"minIDs are\", distanceArray.minIDs);\r\n\t\tif (distanceArray.minIDs.length>1){\r\n\t\t  mapWithCoords[r][c]=\".\"\r\n\t\t\r\n\t\t} else if (distanceArray.minIDs.length==1){\r\n\t\tmapWithCoords[r][c]=distanceArray.minIDs[0];\r\n\t\t\r\n\t\t}\r\n\t//\tconsole.log(distanceArray);\r\n\t  }\r\n\t}  \r\n\t\r\n\t//console.log(\"map with coords\", mapWithCoords);\r\n\t\r\n return mapWithCoords;\r\n\t}\r\n\t\r\n\r\n  function eliminateEdgeCoordinates(map){\r\n\t\t// WORKS CORRECT\r\n\t\tlet eliminated=[];\r\n\t\t\r\n\t  for (let row=0; row<map.length;row++){\r\n\t\t\t\r\n\t\t  if(!eliminated.includes(map[row][0])){\r\n\t\t  eliminated.push(map[row][0]);\r\n\t\t  //eliminated.push(map[row][map.length-1]);\r\n\t\t\t}\r\n\t\t\t\r\n\t  if(!eliminated.includes(map[row][(map[row].length-1)])){\r\n\t\t  eliminated.push(map[row][(map[row].length-1)]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t  for (let column=1; column<map[0].length; column++){\r\n\t\t  if(!eliminated.includes(map[0][column])){\r\n\t\t  eliminated.push(map[0][column]);\r\n\t\t  }\r\n\t\t  if(!eliminated.includes(map[map.length-1][column])){\r\n\t\t  eliminated.push(map[map.length-1][column]);\r\n\t\t  }\r\n\t  }\r\n\t\t//console.log(\"eliminated\", eliminated);\r\n\t  return eliminated;\r\n  }\r\n\r\n  function calculateAreas(map, eliminated, coordinatesArray){\r\n\t\t// WORKS CORRECT\r\n\t\tlet resultArray=[];\r\n\t\t\r\n\t  for (let id=0;id<coordinatesArray.length;id++){\r\n\t\t  let countArea=0;\r\n\t\t  if (!eliminated.includes(coordinatesArray[id].id)){\r\n\t\t\tfor (let r=0;r<map.length;r++){\r\n\t\t\t\tfor (let c=0; c<map[r].length; c++){ \r\n                if(map[r][c]==coordinatesArray[id].id){\r\n\t\t\t\t\tcountArea=countArea+1;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t }\r\n\t\t\t}\r\n\t\t\tlet dic={areaName: coordinatesArray[id], areaCount: countArea} \r\n        resultArray.push(dic);\r\n\t\t  }\r\n\t\t/*let dic={areaName: coordinatesArray[id], areaCount: countArea} \r\n        resultArray.push(dic);\t*/\t\r\n\t  }\r\n\t  //console.log(\"resultArray\", resultArray);\r\n\t  \r\n\t  return resultArray;\r\n  }\r\n  \r\n  function getLargestArea(areaArray){\r\n\t  let max=0;\r\n\t  let maxID;\r\n\t  for (let item=0;item<areaArray.length;item++){\r\n\t\t  if(areaArray[item].areaCount>max){\r\n\t\t\t  max=areaArray[item].areaCount;\r\n\t\t\t  maxID=areaArray[item].areaName.id;\r\n\t\t  }\r\n\t  }\r\n  let output=[maxID, max];\r\n //[{areaName: a, areaCount: 10}, \r\n //{areaName: b, areaCount: 5}]\r\n  //console.log(\"output is\", output);\r\n  return output;\r\n  }","import React, { useState } from \"react\";\r\nimport data from \"./AdventCodeInputs/CodeAdvent201806.json\";\r\nimport \"./component.css\";\r\n\r\nexport const CodeAdvent20180602 = () => {\r\nconst[introCoordinates, setIntroCoordinates] = useState(data);\r\n/*const[introCoordinates, setIntroCoordinates] = useState([\r\n[1, 1],\r\n[1, 6],\r\n[8, 3],\r\n[3, 4],\r\n[5, 5],\r\n[8, 9],\r\n]);\r\n*/\r\n  const [result, setResult] = useState();\r\n\r\n  function handleClick() {\r\n    let output=computeArea(introCoordinates);\r\n    setResult(output);\r\n  }\r\n  return (\r\n    <div>\r\n      <p style={{ fontWeight: \"bold\" }}>Chronal Coordinates:</p>\r\n      <p>Area smaller than thousand: {result} </p>\r\n      <button style={{ backgroundColor: \"#69747C\" }} ><span onClick={handleClick}>Compute area</span>\r\n      </button>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction computeArea(coordinates){\r\n  let max=findMax(coordinates);\r\n  let maximumRow=max[0];\r\n  let maximumColumn=max[1];\r\n  //console.log(\"maximum row:\", maximumRow, \"maximum column:\", maximumColumn);\r\n  let emptyMap=generateField(maximumRow, maximumColumn);\r\n  //console.log(\"empty map is\",emptyMap);\r\n\tlet coordinatesArray=generateIDs(coordinates);\r\n\t//console.log(\"coordinatesArray\", coordinatesArray)\r\n\tlet populatedMap=populateCoordinates(emptyMap, coordinatesArray);\r\n\t//console.log(\"populatedMap\", populatedMap);\r\n\tlet areaSize=calculateDistances(populatedMap, coordinatesArray);\r\n\r\nreturn areaSize;\r\n}\r\n\r\nfunction findMax(input){\r\n\t//WORKS CORRECT\r\n  let maxRow=0;\r\n  let maxColumn=0;\r\n\tfor ( let i =0; i<input.length;i++){\r\n\t\tif (input[i][1]>maxRow){\r\n\t\t\tmaxRow=input[i][1];\r\n\t\t}\r\n\t\tif (input[i][0]>maxColumn){\r\n\t\t\tmaxColumn=input[i][0];\r\n\t\t}\r\n  //console.log(\"maxRow is: \", maxRow, \"maxColumn is:\", maxColumn);\r\n\t}\r\n  let outcome=[maxRow,maxColumn];\r\n  return outcome;\r\n}\r\n  \r\n  function generateField(maxR, maxC){\r\n\t\t//WORKS CORRECT\r\n\t\tlet coordinateMap=[];\r\n\t\t\r\n      for ( let y=0;y<=maxR;y++){\r\n\t\t//\t\tconsole.log(\"y\", y);\r\n\t\t\tlet newRow= new Array(maxC+1);\r\n\t\t//\tconsole.log(\"newRow\", newRow);\r\n\t    for ( let x=0; x<=maxC;x++){\r\n\t\t//\t\tconsole.log(\"x\", x);\r\n\t\t\t newRow[x]=0;\r\n\t\t//\t console.log(\"newrow x\", newRow[x])\r\n\t   }\r\n\t   coordinateMap.push(newRow);\r\n\t//console.log(\"coordinateMap is\", coordinateMap);\r\n   }\r\n   return coordinateMap;\r\n  }\r\n  \r\n  function generateIDs(coord){\r\n\t\t//WORK CORRECT\r\n    let idsLower=\"abcdefghijklmnopqrstuvwxyz\";\r\n    let idsUpper=idsLower.toUpperCase();\r\n    let ids=idsLower+idsUpper;\r\n    //console.log(\"ids are\", ids);\r\n    let idsArray=ids.split(\"\");\r\n    //console.log(\"ids array is\", idsArray);\r\n\tlet enrichedCoordinates=[];\r\n\tfor (let line=0; line<coord.length; line++){\r\n\t\tlet dict={};\r\n\t\tdict.id=idsArray[line];\r\n\t\tdict.value=coord[line];\r\n\t\tdict.areaCount=0;\r\n\t\tenrichedCoordinates.push(dict);\r\n\t}\r\n\t//console.log(\"enrichedCoordinates are\", enrichedCoordinates);\r\n\treturn enrichedCoordinates;\r\n  }\r\n  \r\n  function populateCoordinates( field, coords){\r\n\t\t//WORKS CORRECT\r\n\t\t//console.log(\"field is\", field);\r\n\t\t//console.log(\"coords are\", coords);\r\n\tfor (let entry=0;entry<coords.length;entry++){\r\n\t  field[coords[entry].value[1]][coords[entry].value[0]]=coords[entry].id;\r\n\t}\r\n\t//console.log(\"field\", field);\r\n\treturn field;\r\n  }\r\n  \r\n  function calculateDistances(mapWithCoords, arrayWithCoords ){\r\n    // WORKS CORRECT\r\n    //console.log(\"mapWithCoords\", mapWithCoords,\"arrayWithCoords\",arrayWithCoords )\r\n\t\tlet distanceArray=[];\r\n\t\tlet countArea=0;\r\n\t  for (let r=0;r<mapWithCoords.length;r++){\r\n\t    for (let c=0; c<mapWithCoords[r].length; c++){\r\n\t      let distanceDict={};\r\n\t      distanceDict.coordY=r;\r\n\t      distanceDict.coordX=c;\r\n\t      distanceDict.value=mapWithCoords[r][c];\r\n\t\t\t\tdistanceDict.distances={};\r\n\t\t\t\tdistanceDict.sumDist=0;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfor (let coordInstance=0;coordInstance<arrayWithCoords.length;coordInstance++){\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet pointDistance=Math.abs(r-arrayWithCoords[coordInstance].value[1]) + Math.abs(c-arrayWithCoords[coordInstance].value[0]);\r\n\t\t\t\t\t//console.log(\"pointDistance is\", pointDistance, \"from coord\", arrayWithCoords[coordInstance].id);\r\n\t\t\t\t\tdistanceDict.distances[arrayWithCoords[coordInstance].id]=pointDistance;\r\n\t\t\t\t\tdistanceDict.sumDist=distanceDict.sumDist+pointDistance;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (distanceDict.sumDist<10000){\r\n\t\t\t\t\tdistanceDict.value=1;\r\n\t\t\t\t\tcountArea+=1;\r\n\t\t\t\t}\r\n\t\t\t\tdistanceArray.push(distanceDict);\r\n\t\t  }\t\r\n\t\t}\r\n\t\t\t// console.log(\"distance array\", distanceArray);\r\n\t\t\t// console.log(\"countArea\", countArea);\r\n\r\n return countArea;\r\n\t}","import React, { useState } from \"react\";\r\nimport data from \"./AdventCodeInputs/CodeAdvent201807.json\";\r\nimport \"./component.css\";\r\n\r\nexport const CodeAdvent20180701 = () => {\r\n//const[instructions, setInstructions] = useState(data);\r\nconst[instructions, setInstructions] = useState([\r\n\"Step C must be finished before step A can begin.\",\r\n\"Step C must be finished before step F can begin.\",\r\n\"Step A must be finished before step B can begin.\",\r\n\"Step A must be finished before step D can begin.\",\r\n\"Step B must be finished before step E can begin.\",\r\n\"Step D must be finished before step E can begin.\",\r\n\"Step F must be finished before step E can begin.\",\r\n]);\r\n\r\n  const [result, setResult] = useState();\r\n\r\n  function handleClick() {\r\n    let output=topologicalSort(instructions);\r\n   setResult(output);\r\n  }\r\n  return (\r\n    <div>\r\n      <p style={{ fontWeight: \"bold\" }}>Topological Sort:</p>\r\n      <p>Instructions order: {result} </p>\r\n      <button style={{ backgroundColor: \"#6BAA75\" }} ><span onClick={handleClick}>Compute order</span>\r\n      </button>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction topologicalSort(steps){\r\n\tsteps.sort();\r\n//\tconsole.log(steps);\r\n\t/*expected result:\r\n\t[\r\n\"Step A must be finished before step B can begin.\",\r\n\"Step A must be finished before step D can begin.\",\r\n\"Step B must be finished before step E can begin.\",\r\n\"Step C must be finished before step A can begin.\",\r\n\"Step C must be finished before step F can begin.\",\r\n\"Step D must be finished before step E can begin.\",\r\n\"Step F must be finished before step E can begin.\",\r\n]\r\n\t*/\r\n\tlet stepsDict= generateDict(steps);\r\n\tlet sortedKeys= generateSortedDictKeys(stepsDict);\r\n\tlet sortedDict=generateSortedDependenciesArray(stepsDict, sortedKeys);\r\n  //  console.log(\"stepsDict\", stepsDict);\r\n\t//walkTheGraph(sortedDict, sortedKeys);\r\nreturn 0;\r\n}\r\n\r\nfunction generateDict(input){\r\n\t//PROBLEM HERE\r\n\t/*\r\n\t{A: [C], B:[A], C: [], D: [A], E:[B, D, F], F:[C]};\r\n\t\r\n\t*/\r\n\tlet deptDict={};\r\n\tfor (let i of input){\r\n\t\t//console.log(i);\r\n\t\tlet edgeEnd=i.indexOf(\" must\");\r\n\t\tlet edgeStart=edgeEnd-1;\r\n\t\tlet edge=input.slice(edgeStart,edgeEnd);\r\n\t\tlet nodeEnd=i.indexOf(\" can\");\r\n\t\tlet nodeStart=edgeEnd-1;\r\n\t\tlet node=input.slice(nodeStart,nodeEnd);\r\n\t\tconsole.log(\"node is\", node, \"edge is\", edge);\r\n\t\tif ( node in deptDict){\r\n\t\tdeptDict[node].push(edge);\r\n\t\t}\r\n\t\telse {\r\n\t\t  deptDict[node]=[edge];\r\n\t\t\t}\r\n\t}\r\n\t//console.log(\"dependency dictionary\",deptDict);\r\n\treturn deptDict;\r\n}\r\n\r\nfunction generateSortedDictKeys(input){\r\n\tlet dictKeys= Object.keys(input);\r\n\t//SORT Function\r\n\tlet sortedKeys=dictKeys.sort();\r\n\treturn sortedKeys;\r\n}\r\n\r\n\r\nfunction generateSortedDependenciesArray(input, dictKey){\r\n\t/* input\r\n\t   {A: [C], B:[A], C: [], D: [A], E:[F, B, D], F:[C]};\r\n\t*/\r\n\t\r\n\t/* dictKey\r\n\t   [A,B,C,D,E,F]\r\n\t*/\r\n\t\r\n\tfor ( let k of dictKey){\r\n\t\tinput[k].sort();\r\n\t\r\n\t}\r\n//\tconsole.log(input);\r\n\t// Expected result:\r\n\t// {A: [C], B:[A], C: [], D: [A], E:[B, D, F], F:[C]};\r\n\treturn input;\r\n\t\r\n}\r\n\r\nfunction walkTheGraph(dic, key){\r\n\t/* dic \r\n\t   {A: [C], B:[A], C: [], D: [A], E:[B, D, F], F:[C]};\r\n\t*/\r\n\t\r\n\t/* key\r\n\t   [A,B,C,D,E,F]\r\n\t*/\r\n\tfor (let item of key){\r\n\t\tconsole.log(\"item is:\", item);\r\n\t  for ( let lineItem of dic[item]){\r\n\t\t//  console.log(\"lineItem is\", lineItem);\r\n\t\t  walkTheGraph(dic, dic[item]);\r\n\t  } \r\n\t/* Expected result:\r\n\t   [A, C, B, A, C, C, D, A, C, E, B, A, C, D, A, C, F, C, E, F, C]\r\n\t*/\r\n\t}\r\n}\r\n\r\nfunction singleKeyWalk(dic, singleKey, resolved){\r\n\tconsole.log(singleKey);\r\n\tfor ( let lineItem of dic[singleKey]){\r\n\t\t//  console.log(\"lineItem is\", lineItem);\r\n\t\t  walkTheGraph(dic, lineItem, resolved);\r\n\t  } \r\n\tresolved.push(singleKey)\r\n}","import React from \"react\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Bootstrap, Row, Col, Container } from \"react-bootstrap\";\nimport { CodeAdvent20180101 } from \"../components/codeAdvent20180101.js\";\nimport { CodeAdvent20180102 } from \"../components/codeAdvent20180102.js\";\nimport { CodeAdvent20180201 } from \"../components/codeAdvent20180201.js\";\nimport { CodeAdvent20180202 } from \"../components/codeAdvent20180202.js\";\nimport { CodeAdvent20180301 } from \"../components/codeAdvent20180301.js\";\nimport { CodeAdvent20180401 } from \"../components/codeAdvent20180401.js\";\nimport { CodeAdvent20180402 } from \"../components/codeAdvent20180402.js\";\nimport { CodeAdvent20180501 } from \"../components/codeAdvent20180501.js\";\nimport { CodeAdvent20180502 } from \"../components/codeAdvent20180502.js\";\nimport { CodeAdvent20180601 } from \"../components/codeAdvent20180601.js\";\nimport { CodeAdvent20180602 } from \"../components/codeAdvent20180602.js\";\nimport { CodeAdvent20180701 } from \"../components/codeAdvent20180701.js\";\n//import Background from './advent.jpg';\n\n/* COLOUR PALETTE\n\nButtons:\n#6BAA75\n#A7A7A9\n#69747C\n\nBorder:\n#E8E8EA\n\nMore:\n#C1EDCC\n#B0C0BC\n\n*/\n\nexport default() =>\n    <div className=\"App\">\n      <Container>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n        <Col sm={9}><h2 style={{margin: \"30px 0px\", textAlign: \"left\", color:\"#C1EDCC\"}}>Advent of Code 2018</h2></Col>\n        <Col sm={3}><h2 style={{margin: \"30px 0px\", textAlign: \"right\", color:\"#C1EDCC\"}}>Addania</h2></Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3} ><p>Task 2018 01 01</p>\n            <a href=\"https://adventofcode.com/2018/day/1\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          \n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180101 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}><p>Task 2018 01 02</p>\n            <a href=\"https://adventofcode.com/2018/day/1\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180102 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}><p>Task 2018 02 01</p>\n            <a href=\"https://adventofcode.com/2018/day/2\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180201 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}><p>Task 2018 02 02</p>\n            <a href=\"https://adventofcode.com/2018/day/2\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180202 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}><p>Task 2018 03 01+02</p>\n            <a href=\"https://adventofcode.com/2018/day/3\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180301 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 04 01</p>\n            <a href=\"https://adventofcode.com/2018/day/4\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180401 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 04 02</p>\n            <a href=\"https://adventofcode.com/2018/day/4\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180402 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 05 01</p>\n            <a href=\"https://adventofcode.com/2018/day/5\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180501 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 05 02</p>\n            <a href=\"https://adventofcode.com/2018/day/5\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180502 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 06 01</p>\n            <a href=\"https://adventofcode.com/2018/day/6\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180601 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 06 02</p>\n            <a href=\"https://adventofcode.com/2018/day/6\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180602 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 07 01</p>\n            <a href=\"https://adventofcode.com/2018/day/6\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180701 />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}