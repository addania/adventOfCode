{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/@restart/context/forwardRef.js","webpack:///./node_modules/react-bootstrap/esm/ThemeProvider.js","webpack:///./node_modules/react-bootstrap/esm/Container.js","webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/components/codeAdvent20190101.js","webpack:///./src/components/codeAdvent20190102.js","webpack:///./src/components/codeAdvent20190201.js","webpack:///./src/components/codeAdvent20190202.js","webpack:///./src/components/codeAdvent20190301.js","webpack:///./src/components/codeAdvent20180101.js","webpack:///./src/components/codeAdvent20180102.js","webpack:///./src/components/codeAdvent20180201.js","webpack:///./src/components/codeAdvent20180202.js","webpack:///./src/components/codeAdvent20180301.js","webpack:///./src/components/codeAdvent20180401.js","webpack:///./src/components/codeAdvent20180402.js","webpack:///./src/components/codeAdvent20180501.js","webpack:///./src/components/codeAdvent20180502.js","webpack:///./src/components/codeAdvent20180601.js","webpack:///./src/components/codeAdvent20180602.js","webpack:///./src/components/codeAdvent20180701.js","webpack:///./src/pages/index.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["$export","$entries","S","entries","it","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","this","piRE","fiU","undefined","constructor","source","call","proxy","key","configurable","get","set","keys","i","length","exports","__esModule","renderFn","_temp","_ref","propTypes","defaultProps","_ref$allowFallback","allowFallback","_ref$displayName","displayName","name","render","props","ref","Object","assign","_react","forwardRef","obj","ThemeContext","createContext","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","prefixes","Container","bsPrefix","fluid","_ref$as","as","Component","className","createElement","Row","noGutters","_props$as","otherProps","decoratedBsPrefix","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","apply","concat","CodeAdvent20190101","useState","data","masses","fuelSum","setFuelSum","handleClick","sum","input","reduce","accumulator","currentValue","sumRequirements","map","item","Math","floor","style","fontWeight","backgroundColor","onClick","CodeAdvent20190102","recursion","module","fuelRequired","CodeAdvent20190201","result","setResult","CodeAdvent20190202","CodeAdvent20190301","wires","processedInput","wire1","wire2","wireInfo1","wireInfo2","sumRL1","sumUD1","sumRL2","sumUD2","console","log","direction1","slice","movement1","parseInt","dict1","direction","movement","direction2","movement2","dict2","wireInfo","processInput","output","Log","checkMax","CodeAdvent20180101","frequencyChanges","setFrequencyChanges","recalibration","setRecalibration","index","handleReset","handleRandomize","randomLength","random","newArray","JSON","stringify","CodeAdvent20180102","array","0","duplicate","uniques","proceed","CodeAdvent20180201","boxIDs","checkSum","setCheckSum","infoObject","countTwos","countThrees","totalLetterCount","twoProceed","threeProceed","position","string","letterCount","a","b","c","d","e","g","h","j","k","l","m","n","o","q","r","s","t","u","v","w","x","y","z","returnLetterCount","twos","threes","arrayOfCounts","CodeAdvent20180202","correctBoxIDs","setCorrectBoxIDs","resultString","letterComparison","letterSum","letter","differenceIndex","slicedArray1","slicedArray2","pos","number","CodeAdvent20180301","claims","overlaps","setOverlaps","uniqueClaim","setUniqueClaim","fabric","claimsArray","id","indexOf","horizontalOffset","verticalOffset","rectangleWidth","rectangleHeight","textile","numberOfOverlaps","claim","row","column","line","col","unique","cloth","claimZ","uniqueID","area","countArea","getUnique","computation","checkFabric","CodeAdvent20180401","observations","finalNumber","count","times","totalMinutesPerDay","uniqueGuards","observe","uniqueArray","includes","checkUniqueGuards","maxSleepId","totalSleeping","maxSleepTime","guard","totalMinutesCount","timeLine","guy","dataSet","maxSleeper","dayStatistics","minute","day","maxDayID","maxDay","value","analyzeDays","strategyAnalysis","initialGuardIndex","sortedObservations","sort","countGuards","iteratedGuards","counter","resultArray","dictionary","something","event","Date","getHours","setDate","getDate","date","minutes","subsequentGuardIndex","iterate","endReached","sleepStarts","sleepEnds","min","minEnd","sleepCycle","time","computeObservations","CodeAdvent20180402","maxMinuteID","frequencyArray","minuteFrequency","timeStamp","singleMinute","maxGuardID","maxMinuteCount","iteration","CodeAdvent20180501","introPolymer","units","inputPolymer","element","part1","part2","split","arrayCapital","toUpperCase","combinations","char","char2","generateArray","CodeAdvent20180502","resultsArray","dict","replacingChar","re","replace","poly","polymer","len","entry","polymerize","CodeAdvent20180601","introCoordinates","coordinates","max","maximumRow","maximumColumn","emptyMap","coordinatesArray","distanceMap","eliminatedCoordinates","maxRow","maxColumn","findMax","maxR","maxC","coordinateMap","newRow","Array","generateField","coord","idsLower","idsUpper","idsArray","enrichedCoordinates","areaCount","generateIDs","mapWithCoords","arrayWithCoords","distanceArray","coordY","coordX","distances","minDistance","dist","coordInstance","pointDistance","abs","minValue","minIDs","calculateDistances","field","coords","populateCoordinates","eliminated","eliminateEdgeCoordinates","areaArray","maxID","areaName","getLargestArea","dic","calculateAreas","CodeAdvent20180602","distanceDict","sumDist","CodeAdvent20180701","instructions","steps","stepsDict","deptDict","edgeEnd","edgeStart","edge","nodeEnd","nodeStart","node","generateDict","sortedKeys","dictKey","generateSortedDependenciesArray","topologicalSort","borderBottom","sm","margin","textAlign","color","href","fontSize","maxWidth","hasOwn","hasOwnProperty","classNames","arguments","arg","argType","isArray","inner","join","DESCRIPTORS","getKeys","toIObject","isEnum","isEntries","O","_extends","target","_objectWithoutPropertiesLoose","excluded","sourceKeys"],"mappings":"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","file":"component---src-pages-index-js-f94962036316b6ede105.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nexports.__esModule = true;\nexports[\"default\"] = forwardRef;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction forwardRef(renderFn, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      propTypes = _ref.propTypes,\n      defaultProps = _ref.defaultProps,\n      _ref$allowFallback = _ref.allowFallback,\n      allowFallback = _ref$allowFallback === void 0 ? false : _ref$allowFallback,\n      _ref$displayName = _ref.displayName,\n      displayName = _ref$displayName === void 0 ? renderFn.name || renderFn.displayName : _ref$displayName;\n\n  var render = function render(props, ref) {\n    return renderFn(props, ref);\n  };\n\n  return Object.assign(_react[\"default\"].forwardRef || !allowFallback ? _react[\"default\"].forwardRef(render) : function (props) {\n    return render(props, null);\n  }, {\n    displayName: displayName,\n    propTypes: propTypes,\n    defaultProps: defaultProps\n  });\n}","import \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport forwardRef from '@restart/context/forwardRef';\nimport React, { useContext, useMemo } from 'react';\nvar ThemeContext = React.createContext({});\nvar Consumer = ThemeContext.Consumer,\n    Provider = ThemeContext.Provider;\n\nfunction ThemeProvider(_ref) {\n  var prefixes = _ref.prefixes,\n      children = _ref.children;\n  var copiedPrefixes = useMemo(function () {\n    return _extends({}, prefixes);\n  }, [prefixes]);\n  return React.createElement(Provider, {\n    value: copiedPrefixes\n  }, children);\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  var prefixes = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  var isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  var _opts = opts,\n      prefix = _opts.prefix,\n      _opts$forwardRefAs = _opts.forwardRefAs,\n      forwardRefAs = _opts$forwardRefAs === void 0 ? isClassy ? 'ref' : 'innerRef' : _opts$forwardRefAs;\n  return forwardRef(function (_ref2, ref) {\n    var props = _extends({}, _ref2);\n\n    props[forwardRefAs] = ref; // eslint-disable-next-line react/prop-types\n\n    var bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return React.createElement(Component, _extends({}, props, {\n      bsPrefix: bsPrefix\n    }));\n  }, {\n    displayName: \"Bootstrap(\" + (Component.displayName || Component.name) + \")\"\n  });\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? prefix + \"-fluid\" : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.defaultProps = defaultProps;\nexport default Row;","import \"core-js/modules/es6.array.for-each\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201901.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20190101 = () => {\n  const [masses, setMasses] = useState(data);\n  const [fuelSum, setFuelSum] = useState();\n\n  function handleClick() {\n    let result = calculateIndividualRequirements(masses);\n    let sum=sumRequirements(result);\n    setFuelSum(sum);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Rocket Equation:</p>\n      <p>Fuel Requirements: {fuelSum} </p>\n      <button style={{ backgroundColor: \"#6BAA75\" }} onClick={handleClick}><span onClick={handleClick}>Run Calculation</span>\n      </button>      \n    </div>\n  );\n};\n\nfunction calculateIndividualRequirements(input){\n  let requirementsArray=input.map( item=>(Math.floor(item/3))-2);\n  return requirementsArray;\n}\n\nfunction sumRequirements(input){\n  let reducer = (accumulator, currentValue ) => accumulator + currentValue;\n  let total = input.reduce(reducer, 0);\n  return total\n}","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201901.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20190102 = () => {\n  const [masses, setMasses] = useState(data);\n  const [fuelSum, setFuelSum] = useState();\n\n  function handleClick() {\n    let result = calculateIndividualRequirements(masses);\n    let sum=sumRequirements(result);\n    setFuelSum(sum);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Rocket Equation Inception:</p>\n      <p>Fuel Requirements: {fuelSum} </p>\n      <button style={{ backgroundColor: \"#A7A7A9\" }} onClick={handleClick}><span onClick={handleClick}>Run Calculation</span>\n      </button>      \n    </div>\n  );\n};\n\nfunction calculateIndividualRequirements(input){\n  let requirementsArray=input.map(recursion);\n  return requirementsArray;\n}\n\nfunction recursion(module){\n  if((Math.floor(module/3))-2<=0){\n    return 0;\n  } else{\n    let fuelRequired=(Math.floor(module/3))-2;\n      return fuelRequired + recursion(fuelRequired);\n  }\n}\n\nfunction sumRequirements(input){\n  let reducer = (accumulator, currentValue ) => accumulator + currentValue;\n  let total = input.reduce(reducer, 0);\n    return total\n}","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201902.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20190201 = () => {\n  const [input, setInput] = useState(data);\n  const [result, setResult] = useState();\n\n  function handleClick() {\n    let output=x(input);\n    setResult(output);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>NAME:</p>\n      <p>XXX: {result} </p>\n      <button style={{ backgroundColor: \"#6BAA75\" }} onClick={handleClick}><span onClick={handleClick}>XXX</span>\n      </button>      \n    </div>\n  );\n};\n\nfunction x(input){\n  \n  return 0;\n}","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201902.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20190202 = () => {\n  const [input, setInput] = useState(data);\n  const [result, setResult] = useState();\n\n  function handleClick() {\n    let output=x(input);\n    setResult(output);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>NAME:</p>\n      <p>XXX: {result} </p>\n      <button style={{ backgroundColor: \"#6BAA75\" }} onClick={handleClick}><span onClick={handleClick}>XXX</span>\n      </button>      \n    </div>\n  );\n};\n\nfunction x(input){\n  \n  return 0;\n}","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201903.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20190301 = () => {\n  const [wires, setWires] = useState(data);\n  const [result, setResult] = useState();\n\n  function handleClick() {\n    let processedInput=processInput(wires);\n    console.log(processedInput);\n    let output=checkMax(wires);\n    setResult(output);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Crossed Wires:</p>\n      <p>Manhattan Distance: {result} </p>\n      <button style={{ backgroundColor: \"#6BAA75\" }}><span onClick={handleClick}>Check Wires</span>\n      </button>      \n    </div>\n  );\n};\n\nfunction processInput(input){\n  let wire1=input[0];\n  let wire2=input[1];\n  let wireInfo1=[];\n  let wireInfo2=[];\n  let sumRL1=0;\n  let sumUD1=0;\n  let sumRL2=0;\n  let sumUD2=0;\n  for (let i=0;i<wire1.length;i++){\n    console.log(\"wire1 i\", wire1[i]);\n    let direction1=wire1[i].slice(0,1);\n    let movement1=parseInt(wire1[i].slice(1));\n    let dict1={direction: direction1, movement: movement1};\n    wireInfo1.push(dict1);\n    if (direction1==\"R\" || direction1==\"L\" ){\n      sumRL1=sumRL1 + movement1;\n    }else if (direction1==\"U\" || direction1==\"D\"){\n      sumUD1=sumUD1 + movement1;\n    }\n  }\n  \n  for (let i=0;i<wire2.length;i++){\n   \n    let direction2=wire2[i].slice(0,1);\n    let movement2=parseInt(wire2[i].slice(1));\n    let dict2={direction: direction2, movement: movement2};\n    wireInfo2.push(dict2);\n    if (direction2==\"R\" || direction2==\"L\" ){\n      sumRL2=sumRL2 + movement2;\n    }else if (direction2==\"U\" || direction2==\"D\"){\n      sumUD2=sumUD2 + movement2;\n    }\n  }\n  let wireInfo=[wireInfo1,wireInfo2];\n  console.log(wireInfo);\n  console.log(\"sumRL1\", sumRL1, \"sumUD1\", sumUD1,\"sumRL2\", sumRL2, \"sumUD2\", sumUD2);\n  return wireInfo;\n}\n\nfunction checkMax(input){\n  let wire1=input[0];\n  let wire2=input[1];\n  let maxR=0;\n  let maxL=0;\n  let maxU=0;\n  let maxD=0;\n  for (let i=0;i<wire1.length;i++){\n    let direction=wire1[i]\n    if (wire1[i]>maxR){\n      console.Log(\"maxR\",wire1[i]);\n    }\n\n  }\n  console.log(wire1, wire2);\n  return 0;\n}","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201801.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180101 = () => {\n  const [frequencyChanges, setFrequencyChanges] = useState(data);\n  const [recalibration, setRecalibration] = useState(0);\n\n  function handleClick() {\n    let result = recalibration;\n    frequencyChanges.map((item, index) => {\n      result = result + item;\n    });\n    setRecalibration(result);\n  }\n\n  function handleReset() {\n    setRecalibration(0);\n  }\n\n  function handleRandomize() {\n    let randomLength = Math.floor(Math.random() * 10) + 1;\n    var newArray = [];\n    console.log(\"Random length is:\", randomLength);\n\n    for (let i = 0; i <= randomLength; i++) {\n      //why concat wont work??\n      newArray.push(Math.floor(Math.random() * 100) + 1);\n      console.log(\"i is: \", i);\n    }\n    console.log(JSON.stringify(newArray));\n    setFrequencyChanges(newArray);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Frequency Calibration:</p>\n      <p>Recalibrated freuqency is: {recalibration} </p>\n      <button style={{ backgroundColor: \"#6BAA75\" }} onClick={handleClick}><span onClick={handleClick}>Calibrate</span>\n      </button>\n      <button style={{ backgroundColor: \"#A7A7A9\" }} onClick={handleReset}>\n      <span  onClick={handleReset}>Reset </span>\n      </button>\n      <button style={{ backgroundColor: \"#69747C\" }} onClick={handleRandomize}>\n      <span onClick={handleRandomize}>Randomize </span>\n      </button>\n      \n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201801.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180102 = () => {\n  const [array, setArray] = useState(data);\n  const [total, setTotal] = useState(0);\n  const [uniq, setUniq] = useState({ 0: 1 });\n  const [result, setResult] = useState();\n  const [goOn, setGoOn] = useState(true);\n\n  function handleClick() {\n    let sum = 0;\n    let uniques = { 0: 1 };\n    let duplicate;\n    let proceed = true;\n    let i = 0;\n\n    while (proceed && i < 140) {\n      i = i + 1;\n      array.map((item, index) => {\n        sum = sum + item;\n\n        if (uniques[sum] == 1 && proceed == true) {\n          proceed = false;\n          duplicate = sum;\n          console.log(\"FAAALSE\");\n        } else {\n        }\n        uniques[sum] = 1;\n      });\n      console.log(i);\n    }\n    setResult(duplicate);\n  }\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>\n        Find duplicate frequencies:\n      </p>\n      <p>Duplicate frequencies are: {JSON.stringify(result)}</p>\n      <button style={{ backgroundColor: \"#69747C\" }} onClick={handleClick}>\n      <span onClick={handleClick}>Find Duplicates</span>\n      </button>\n      \n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201802.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180201 = () => {\n  const [boxIDs, setboxIDs] = useState(data);\n  const [checkSum, setCheckSum] = useState();\n\n  function handleClick() {\n    setCheckSum(checkSumcalculation(boxIDs));\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Boxes checksum:</p>\n      {/* <p>Boxes Ids: {JSON.stringify(boxIDs)}</p> */}\n      <p>CheckSum: {JSON.stringify(checkSum)}</p>\n      <button style={{ backgroundColor: \"#6BAA75\" }} onClick={handleClick}>\n      <span onClick={handleClick}>Calculate</span>\n      </button>\n    </div>\n  );\n};\n\nfunction returnLetterCount(string) {\n  let letterCount = {\n    a: 0,\n    b: 0,\n    c: 0,\n    d: 0,\n    e: 0,\n    f: 0,\n    g: 0,\n    h: 0,\n    i: 0,\n    j: 0,\n    k: 0,\n    l: 0,\n    m: 0,\n    n: 0,\n    o: 0,\n    p: 0,\n    q: 0,\n    r: 0,\n    s: 0,\n    t: 0,\n    u: 0,\n    v: 0,\n    w: 0,\n    x: 0,\n    y: 0,\n    z: 0\n  };\n\n  for (let i = 0; i < string.length; i++) {\n    letterCount[string[i]] = letterCount[string[i]] + 1;\n  }\n  return letterCount;\n}\n\nfunction returnArrayOfCounts(array) {\n  let countTwos = 0;\n  let countThrees = 0;\n  let totalLetterCount = [];\n  array.map((item, index) => {\n    let twoProceed = true;\n    let threeProceed = true;\n    let position = returnLetterCount(item);\n    let keys = Object.keys(position);\n    keys.map((key, i) => {\n      if (position[key] == 2 && twoProceed) {\n        countTwos += 1;\n        twoProceed = false;\n      } else if (position[key] == 3 && threeProceed) {\n        countThrees += 1;\n        threeProceed = false;\n      } else {\n      }\n    });\n    totalLetterCount.push(position);\n  });\n  console.log(\"Twos are \", countTwos, \"Threes are \", countThrees);\n  // return totalLetterCount;\n  return {\n    twos: countTwos,\n    threes: countThrees,\n    arrayOfCounts: totalLetterCount\n  };\n}\n\nfunction checkSumcalculation(input) {\n  let infoObject = returnArrayOfCounts(input);\n  console.log(infoObject);\n\n  return infoObject.twos * infoObject.threes;\n}\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201802.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180202 = () => {\n  const [boxIDs, setboxIDs] = useState(data);\n  const [correctBoxIDs, setCorrectBoxIDs] = useState();\n\n  function handleClick() {\n    let result = checkIDs(boxIDs);\n    setCorrectBoxIDs(result);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Compare Box IDs:</p>\n      <p>Matching Box IDs {JSON.stringify(correctBoxIDs)}</p>\n      <button style={{ backgroundColor: \"#A7A7A9\" }} onClick={handleClick}>\n      <span onClick={handleClick}>Correct IDs</span>\n      </button>\n    </div>\n  );\n};\n\nfunction checkIDs(input) {\n  let resultString;\n  input.forEach((item, index) => {\n    console.log(index);\n    for (let i = index + 1; i < input.length; i++) {\n      let letterComparison = [];\n      let letterSum = 0;\n      for (let letter = 0; letter < item.length; letter++) {\n        if (item[letter] == input[i][letter]) {\n          letterComparison.push(1);\n          letterSum = letterSum + 1;\n        } else {\n          letterComparison.push(0);\n        }\n      }\n\n      if (letterSum == item.length - 1) {\n        console.log(\"I AM TH WINNER\", item, input[i]);\n        console.log(letterComparison);\n        let differenceIndex;\n        let slicedArray1;\n        let slicedArray2;\n        letterComparison.map((pos, number) => {\n          if (pos == 0) {\n            differenceIndex = number;\n            console.log(\"Difference index is\", differenceIndex);\n            slicedArray1 = item.slice(0, differenceIndex);\n            slicedArray2 = item.slice(differenceIndex + 1, item.length);\n            console.log(slicedArray1, slicedArray2);\n            resultString = slicedArray1.concat(slicedArray2);\n          } else {\n          }\n        });\n      }\n    }\n  });\n\n  return resultString;\n}\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201803.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180301 = () => {\n  const [claims, setClaims] = useState(data);\n  const [overlaps, setOverlaps] = useState();\n  const [uniqueClaim, setUniqueClaim] = useState();\n\n  function handleClick() {\n    let result = checkFabric(claims);\n    setOverlaps(result[0]);\n    setUniqueClaim(result[1]);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Santa Fabric Overlaps:</p>\n      <p>Number of overlaps: {JSON.stringify(overlaps)}</p>\n      <p>Unique claim: {JSON.stringify(uniqueClaim)}</p>\n      <button style={{ backgroundColor: \"#69747C\" }} onClick={handleClick}>\n      <span onClick={handleClick}>Check Overlaps</span>\n      </button>\n    </div>\n  );\n};\n\nfunction checkFabric(input) {\n  let fabricWidth = 1000;\n  let fabricHeight = 1000;\n  let fabric = [];\n  let claimsArray = [];\n\n  for (let i = 0; i < fabricHeight; i++) {\n    fabric.push([]);\n    for (let j = 0; j < fabricWidth; j++) {\n      fabric[i].push(0);\n    }\n  }\n  //console.log(fabric);\n\n  for (let i = 0; i < input.length; i++) {\n    let id = input[i].slice(1, input[i].indexOf(\" @\"));\n    let horizontalOffset = input[i].slice(\n      input[i].indexOf(\"@ \") + 2,\n      input[i].indexOf(\",\")\n    );\n    let verticalOffset = input[i].slice(\n      input[i].indexOf(\",\") + 1,\n      input[i].indexOf(\":\")\n    );\n    let rectangleWidth = input[i].slice(\n      input[i].indexOf(\": \") + 2,\n      input[i].indexOf(\"x\")\n    );\n    let rectangleHeight = input[i].slice(input[i].indexOf(\"x\") + 1);\n    //  console.log(id);\n    //  console.log(horizontalOffset);\n    //  console.log(verticalOffset);\n    //  console.log(rectangleWidth);\n    //  console.log(rectangleHeight);\n    claimsArray.push([\n      id,\n      horizontalOffset,\n      verticalOffset,\n      rectangleWidth,\n      rectangleHeight\n    ]);\n  }\n  //console.log(claimsArray);\n\n  let output = computation(fabric, claimsArray);\n\n  return output;\n}\n\nfunction computation(textile, claims) {\n  let numberOfOverlaps = 0;\n  //console.log(textile);\n  for (let claim = 0; claim < claims.length; claim++) {\n    //  console.log(claims[claim]);\n    for (\n      let row = parseInt(claims[claim][2]);\n      row < parseInt(claims[claim][2]) + parseInt(claims[claim][4]);\n      row++\n    ) {\n      //    console.log(\"row is\", row);\n\n      for (\n        let column = parseInt(claims[claim][1]);\n        column < parseInt(claims[claim][1]) + parseInt(claims[claim][3]);\n        column++\n      ) {\n        //  console.log(\"column is\", column);\n        textile[row][column] = textile[row][column] + 1;\n      }\n    }\n  }\n  //console.log(textile);\n  for (let line = 0; line < textile.length; line++) {\n    for (let col = 0; col < textile[line].length; col++) {\n      //  console.log(line, col);\n      if (textile[line][col] > 1) {\n        numberOfOverlaps = numberOfOverlaps + 1;\n      } else {\n      }\n    }\n  }\n  let unique = getUnique(textile, claims);\n  //console.log(numberOfOverlaps);\n  return [numberOfOverlaps, unique];\n}\n\nfunction getUnique(cloth, claimZ) {\n  let uniqueID;\n  for (let claim = 0; claim < claimZ.length; claim++) {\n    let isOverlapping = true;\n    let area = parseInt(claimZ[claim][3]) * parseInt(claimZ[claim][4]);\n    let countArea = 0;\n    //  console.log(\"area is\", area);\n    //  console.log(claimZ[claim]);\n    for (\n      let row = parseInt(claimZ[claim][2]);\n      row < parseInt(claimZ[claim][2]) + parseInt(claimZ[claim][4]);\n      row++\n    ) {\n      //    console.log(\"row is\", row);\n\n      for (\n        let column = parseInt(claimZ[claim][1]);\n        column < parseInt(claimZ[claim][1]) + parseInt(claimZ[claim][3]);\n        column++\n      ) {\n        //      console.log(\"column is\", column);\n        if (cloth[row][column] == 1) {\n          countArea = countArea + 1;\n        } else {\n        }\n      }\n    }\n    if (area == countArea) {\n      uniqueID = claimZ[claim][0];\n      console.log(\"uniqueID is:\", uniqueID);\n    }\n  }\n\n  return uniqueID;\n}\n","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201804.json\";\n//import data from \"./AdventCodeInputs/test.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180401 = () => {\n/*  const [observations, setObservations] = useState([\"[1518-11-02 00:40] falls asleep\",\n  \"[1518-01-30 00:55] wakes up\",\n  \"[1518-12-24 00:02] Guard #8 begins shift\",\n  \"[1518-10-08 00:45] falls asleep\",\n  \"[1518-12-25 00:42] falls asleep\", \n  \"[1518-12-03 00:05] Guard #5 begins shift\",\n  \"[1518-10-08 00:37] falls asleep\",\n  \"[1518-12-30 23:58] Guard #225 begins shift\",\n  \"[1518-01-30 00:03] Guard #109 begins shift\",\n  \"[1518-11-01 23:58] Guard #225 begins shift\",\n  \"[1518-12-24 00:45] falls asleep\", \n  \"[1518-11-24 00:35] falls asleep\", \n  \"[1518-11-24 00:02] Guard #8 begins shift\",\n  \"[1518-12-24 00:59] wakes up\",\n  \"[1518-01-30 00:45] falls asleep\",\n  \"[1518-10-08 00:00] Guard #1000 begins shift\",\n  \"[1518-11-24 00:55] wakes up\",\n  \"[1518-12-03 00:49] wakes up\",\n  \"[1518-12-25 00:46] wakes up\",\n  \"[1518-11-06 00:03] Guard #9 begins shift\",\n  \"[1518-10-08 00:55] wakes up\",\n  \"[1518-10-08 00:44] wakes up\",\n  \"[1518-12-31 00:30] falls asleep\",\n  \"[1518-12-31 00:50] wakes up\",\n  \"[1518-12-03 00:34] falls asleep\",\n  \"[1518-12-24 23:52] Guard #8 begins shift\",\n  \"[1518-11-02 00:50] wakes up\",\n  ]\n  );\n  \n*/\n  const [observations, setObservations] = useState(data);\n  const [result, setResult] = useState();\n\n  function handleClick() {\n  //  debugger;\n    let output = computeObservations(observations);\n    let finalNumber= strategyAnalysis(output);\n    setResult(finalNumber);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Guards Observation:</p>\n      <p>ID * Minutes: {JSON.stringify(result)}</p>\n      <button style={{ backgroundColor: \"#6BAA75\" }}>\n        <span onClick={handleClick}>Get Strategy1</span>\n      </button>\n    </div>\n  );\n};\n\nfunction computeObservations(input) {\n  \n  let sortedObservations = input.sort();\n//console.log(sortedObservations);\n  let countGuards=0;\n  let iteratedGuards=0;\n  for (let counter =0; counter < sortedObservations.length; counter++) {\n   if (sortedObservations[counter].includes(\"Guard\")) {\n      countGuards+=1;\n   }\n  }\n\n  //console.log(\"countGuards is: \", countGuards)\n  let initialGuardIndex;\n  var resultArray=[];\n  for (let row = 0; row < sortedObservations.length; row++) {\n     \n    var dictionary = {};\n    //console.log(\"row iterations\", row)\n    if (sortedObservations[row].includes(\"Guard\")) {       \n      initialGuardIndex = row;\n      iteratedGuards+=1;\n\n      let year = sortedObservations[row].slice(1, sortedObservations[row].indexOf(\"-\"));\n      let month = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"-\") + 1,\n        sortedObservations[row].indexOf(\"-\", sortedObservations[row].indexOf(\"-\") + 1)\n      );\n      let day = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"-\", sortedObservations[row].indexOf(\"-\") + 1) + 1,\n        sortedObservations[row].indexOf(\" \")\n      );\n      let hour = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\" \") + 1,\n        sortedObservations[row].indexOf(\":\")\n      );\n      let minute = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\":\") + 1,\n        sortedObservations[row].indexOf(\"]\")\n      );\n\n      let something = sortedObservations[row].slice(\n        1,\n        sortedObservations[row].indexOf(\"]\")\n      )+\":00\";\n     \n      \n      var event = new Date(something);\n      console.log(event);\n     \n\n      if(event.getHours()==23){\n        event.setDate(event.getDate() + 1)\n\n      }else {\n\n      }\n      dictionary.date = event;\n\n  //  console.log(\"Dict data year is:\", dictionary.date.getFullYear());\n  //  console.log(\"Dict data DATE is:\", dictionary.date.getDate());\n\n      dictionary.id = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"#\") + 1,\n        sortedObservations[row].indexOf(\" \", sortedObservations[row].indexOf(\"#\"))\n      );\n      let minutes=[];\n      for (let minute=0; minute<60; minute++){\n       minutes.push(0);\n      }\n      dictionary.times=minutes;\n\nlet subsequentGuardIndex;\n    let iterate=true;\n    let endReached =false;\n    if (iteratedGuards==countGuards){\n      endReached=true;\n    }\n\n    for (let line=row+1; line<sortedObservations.length; line++){\n      if ((sortedObservations[line].includes(\"Guard\") && iterate) || endReached){\n        if (!endReached){\n          subsequentGuardIndex=line;\n        } else{\n          subsequentGuardIndex=sortedObservations.length;\n        }\n        iterate =false;\n      }}\n\n        var sleepStarts=[];\n        var sleepEnds=[];\n        \n          for (let n=initialGuardIndex +1; n<subsequentGuardIndex; n++){\n              if (sortedObservations[n].includes(\"asleep\")){\n              \n              let min = parseInt(sortedObservations[n].slice(\n                sortedObservations[n].indexOf(\":\") + 1,\n                sortedObservations[n].indexOf(\"]\")));\n               sleepStarts.push(min);\n             \n              }\n          }\n          for (let m=initialGuardIndex +1; m<subsequentGuardIndex; m++){\n            if (sortedObservations[m].includes(\"wakes\")){\n            \n\n            let minEnd = parseInt(sortedObservations[m].slice(\n              sortedObservations[m].indexOf(\":\") + 1,\n              sortedObservations[m].indexOf(\"]\")));\n              sleepEnds.push(minEnd);\n         //    console.log(\"input n\",input[m]);\n         //    console.log(\"min\", minEnd);\n         //    console.log(dictionary.date);\n         //    console.log(\"sleep ends\",sleepEnds);\n            }\n        }\n      //  console.log(\"sleep starts\", sleepStarts);\n       \n        for (let sleepCycle=0;sleepCycle<sleepStarts.length;sleepCycle++){\n        for (let time=sleepStarts[sleepCycle]; time<sleepEnds[sleepCycle]; time++){\n        //  debugger;\n          dictionary.times[time]=dictionary.times[time]+1;\n        //  console.log(\"sleep cycle:\", sleepCycle, \"time:\", time, \"dict\", dictionary.times);\n        }\n      }\n\n\n    } else {\n\n    }\n\n\n    \n  if (Object.entries(dictionary).length>0){\n  resultArray.push(dictionary);\n  }\n  }\n  console.log(resultArray);\n  return resultArray;\n}\n\nfunction strategyAnalysis(input){\n  for (let i=0; i<input.length;i++){\n    let count=0;\n    for (let j=0;j<input[i].times.length;j++){\n    count=count+input[i].times[j];\n    }\n    input[i].totalMinutesPerDay=count;\n  }\nconsole.log(\"INPUT TO STRATEGY ANALYSIS IS: \", input);\n\nlet uniqueGuards=checkUniqueGuards(input);\nconsole.log(\"unique guards aree:\",uniqueGuards);\n//debugger;\nlet totalSleeping=[];\nlet maxSleepTime=0;\nlet maxSleepId;\nfor(let guard=0;guard<uniqueGuards.length; guard++){\n  let totalMinutesCount=0;\n  \n  for (let timeLine=0;timeLine<input.length; timeLine++){\n    if (input[timeLine].id==uniqueGuards[guard]){\n    //  debugger;\n      totalMinutesCount=totalMinutesCount+input[timeLine].totalMinutesPerDay;\n    }\n    \n  }\n  totalSleeping.push(totalMinutesCount);\n  //console.log(\"total minutesCount\",totalMinutesCount);\n  \n  console.log(\"total minutes count\", totalSleeping);\n}\nfor (let guy=0;guy<uniqueGuards.length;guy++){\nif (totalSleeping[guy] >maxSleepTime){\n  maxSleepTime=totalSleeping[guy];\n  maxSleepId=uniqueGuards[guy];\n}\n}\n//console.log(\"total sleeping times\", totalSleeping);\nconsole.log(\"maxSleeptime\", maxSleepTime);\nconsole.log(\"maxSleepID\", maxSleepId);\n\nlet finalCalculation=analyzeDays(input, maxSleepId);\n//console.log(analyzedDay);\n  return finalCalculation;\n}\n\nfunction checkUniqueGuards(observe){\n  var uniqueArray=[];\n  for (let i=0; i<observe.length;i++)\n    if (!uniqueArray.includes(observe[i].id)){\n      uniqueArray.push(observe[i].id);\n\n    }\n   // console.log(uniqueArray);\n  return uniqueArray;\n}\n\nfunction analyzeDays(dataSet, maxSleeper){\n  let dayStatistics=[];\n      for (let minute=0; minute<60; minute++){\n       dayStatistics.push(0);\n      }\nfor (let row=0;row<dataSet.length;row++){\n//  debugger;\nif (parseInt(dataSet[row].id)==maxSleeper){\n  for (let day=0;day<dataSet[row].times.length;day++)\n   dayStatistics[day]=dayStatistics[day]+dataSet[row].times[day];\n}\n}\n//console.log(dataSet);\n//console.log(dayStatistics);\n\nlet maxDay=0;\nlet maxDayID;\nfor (let value=0;value<dayStatistics.length;value++){\n  if (dayStatistics[value]>maxDay){\n    maxDay=dayStatistics[value];\n    maxDayID=value;\n  }\n}\nconsole.log(\"max day value\", maxDay, \"max day ID\", maxDayID);\nconsole.log(\"max sleepr\",maxSleeper);\nlet finalResult=maxDayID*maxSleeper;\n\n//console.log(finalResult);\n  return finalResult;\n}","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201804.json\";\n//import data from \"./AdventCodeInputs/test.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180402 = () => {\n/*  const [observations, setObservations] = useState([\"[1518-11-02 00:40] falls asleep\",\n  \"[1518-01-30 00:55] wakes up\",\n  \"[1518-12-24 00:02] Guard #8 begins shift\",\n  \"[1518-10-08 00:45] falls asleep\",\n  \"[1518-12-25 00:42] falls asleep\", \n  \"[1518-12-03 00:05] Guard #5 begins shift\",\n  \"[1518-10-08 00:37] falls asleep\",\n  \"[1518-12-30 23:58] Guard #225 begins shift\",\n  \"[1518-01-30 00:03] Guard #109 begins shift\",\n  \"[1518-11-01 23:58] Guard #225 begins shift\",\n  \"[1518-12-24 00:45] falls asleep\", \n  \"[1518-11-24 00:35] falls asleep\", \n  \"[1518-11-24 00:02] Guard #8 begins shift\",\n  \"[1518-12-24 00:59] wakes up\",\n  \"[1518-01-30 00:45] falls asleep\",\n  \"[1518-10-08 00:00] Guard #1000 begins shift\",\n  \"[1518-11-24 00:55] wakes up\",\n  \"[1518-12-03 00:49] wakes up\",\n  \"[1518-12-25 00:46] wakes up\",\n  \"[1518-11-06 00:03] Guard #9 begins shift\",\n  \"[1518-10-08 00:55] wakes up\",\n  \"[1518-10-08 00:44] wakes up\",\n  \"[1518-12-31 00:30] falls asleep\",\n  \"[1518-12-31 00:50] wakes up\",\n  \"[1518-12-03 00:34] falls asleep\",\n  \"[1518-12-24 23:52] Guard #8 begins shift\",\n  \"[1518-11-02 00:50] wakes up\",\n  ]\n  );\n */ \n\n  const [observations, setObservations] = useState(data);\n  const [result, setResult] = useState();\n\n  function handleClick() {\n  //  debugger;\n    let output = computeObservations(observations);\n  //  console.log(output);\n    let finalNumber= strategyAnalysis(output);\n    setResult(finalNumber);\n  }\n\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Guards Observation:</p>\n      <p>ID * Minutes: {JSON.stringify(result)}</p>\n      <button style={{ backgroundColor: \"#A7A7A9\" }}>\n        <span onClick={handleClick}>Get Strategy2</span>\n      </button>\n    </div>\n  );\n};\n\nfunction computeObservations(input) {\n  \n  let sortedObservations = input.sort();\n//console.log(sortedObservations);\n  let countGuards=0;\n  let iteratedGuards=0;\n  for (let counter =0; counter < sortedObservations.length; counter++) {\n   if (sortedObservations[counter].includes(\"Guard\")) {\n      countGuards+=1;\n   }\n  }\n\n  //console.log(\"countGuards is: \", countGuards)\n  let initialGuardIndex;\n  var resultArray=[];\n  for (let row = 0; row < sortedObservations.length; row++) {\n     \n    var dictionary = {};\n    //console.log(\"row iterations\", row)\n    if (sortedObservations[row].includes(\"Guard\")) {       \n      initialGuardIndex = row;\n      iteratedGuards+=1;\n\n      let year = sortedObservations[row].slice(1, sortedObservations[row].indexOf(\"-\"));\n      let month = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"-\") + 1,\n        sortedObservations[row].indexOf(\"-\", sortedObservations[row].indexOf(\"-\") + 1)\n      );\n      let day = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"-\", sortedObservations[row].indexOf(\"-\") + 1) + 1,\n        sortedObservations[row].indexOf(\" \")\n      );\n      let hour = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\" \") + 1,\n        sortedObservations[row].indexOf(\":\")\n      );\n      let minute = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\":\") + 1,\n        sortedObservations[row].indexOf(\"]\")\n      );\n\n      let something = sortedObservations[row].slice(\n        1,\n        sortedObservations[row].indexOf(\"]\")\n      )+\":00\";\n     \n      \n      var event = new Date(something);\n    //  console.log(event);\n     \n\n      if(event.getHours()==23){\n        event.setDate(event.getDate() + 1)\n\n      }else {\n\n      }\n      dictionary.date = event;\n\n  //  console.log(\"Dict data year is:\", dictionary.date.getFullYear());\n  //  console.log(\"Dict data DATE is:\", dictionary.date.getDate());\n\n      dictionary.id = sortedObservations[row].slice(\n        sortedObservations[row].indexOf(\"#\") + 1,\n        sortedObservations[row].indexOf(\" \", sortedObservations[row].indexOf(\"#\"))\n      );\n      let minutes=[];\n      for (let minute=0; minute<60; minute++){\n       minutes.push(0);\n      }\n      dictionary.times=minutes;\n\nlet subsequentGuardIndex;\n    let iterate=true;\n    let endReached =false;\n    if (iteratedGuards==countGuards){\n      endReached=true;\n    }\n\n    for (let line=row+1; line<sortedObservations.length; line++){\n      if ((sortedObservations[line].includes(\"Guard\") && iterate) || endReached){\n        if (!endReached){\n          subsequentGuardIndex=line;\n        } else{\n          subsequentGuardIndex=sortedObservations.length;\n        }\n        iterate =false;\n      }}\n\n        var sleepStarts=[];\n        var sleepEnds=[];\n        \n          for (let n=initialGuardIndex +1; n<subsequentGuardIndex; n++){\n              if (sortedObservations[n].includes(\"asleep\")){\n              \n              let min = parseInt(sortedObservations[n].slice(\n                sortedObservations[n].indexOf(\":\") + 1,\n                sortedObservations[n].indexOf(\"]\")));\n               sleepStarts.push(min);\n             \n              }\n          }\n          for (let m=initialGuardIndex +1; m<subsequentGuardIndex; m++){\n            if (sortedObservations[m].includes(\"wakes\")){\n            \n\n            let minEnd = parseInt(sortedObservations[m].slice(\n              sortedObservations[m].indexOf(\":\") + 1,\n              sortedObservations[m].indexOf(\"]\")));\n              sleepEnds.push(minEnd);\n         //    console.log(\"input n\",input[m]);\n         //    console.log(\"min\", minEnd);\n         //    console.log(dictionary.date);\n         //    console.log(\"sleep ends\",sleepEnds);\n            }\n        }\n      //  console.log(\"sleep starts\", sleepStarts);\n       \n        for (let sleepCycle=0;sleepCycle<sleepStarts.length;sleepCycle++){\n        for (let time=sleepStarts[sleepCycle]; time<sleepEnds[sleepCycle]; time++){\n        //  debugger;\n          dictionary.times[time]=dictionary.times[time]+1;\n        //  console.log(\"sleep cycle:\", sleepCycle, \"time:\", time, \"dict\", dictionary.times);\n        }\n      }\n\n\n    } else {\n\n    }\n\n\n    \n  if (Object.entries(dictionary).length>0){\n  resultArray.push(dictionary);\n  }\n  }\n  //console.log(resultArray);\n  return resultArray;\n}\n\nfunction strategyAnalysis(input){\n  for (let i=0; i<input.length;i++){\n    let count=0;\n    for (let j=0;j<input[i].times.length;j++){\n    count=count+input[i].times[j];\n    }\n    input[i].totalMinutesPerDay=count;\n  }\n//console.log(\"INPUT TO STRATEGY ANALYSIS IS: \", input);\n\nlet uniqueGuards=checkUniqueGuards(input);\n//console.log(\"unique guards aree:\",uniqueGuards);\nlet frequencyArray=[];\nfor (let guard=0; guard<uniqueGuards.length;guard++){\n  let minuteFrequency=[];\n  for (let min=0; min<60; min++){\n    minuteFrequency.push(0);\n   }\n  // console.log(minuteFrequency);\n//console.log(\"guard\", guard);\n  for (let timeStamp=0;timeStamp<input.length;timeStamp++ ){\n    //console.log(\"timeStamp\", timeStamp);\n    //  console.log(\"min\", singleMinute);\n    if(input[timeStamp].id==uniqueGuards[guard]){\n      //console.log(\"i identified guard\",uniqueGuards[guard], input[timeStamp].id, \"in row\", timeStamp  )\n      \n      for (let singleMinute=0;singleMinute<input[timeStamp].times.length;singleMinute++){\n       minuteFrequency[singleMinute]=minuteFrequency[singleMinute]+input[timeStamp].times[singleMinute];\n      \n    }\n    }\n\n  }\n // console.log(minuteFrequency);\n  frequencyArray.push(minuteFrequency);\n}\n//console.log(\"frequency array\", frequencyArray);\n//debugger;\n/*let totalSleeping=[];\nlet maxSleepTime=0;\nlet maxSleepId;\nfor(let guard=0;guard<uniqueGuards.length; guard++){\n  let totalMinutesCount=0;\n  \n  for (let timeLine=0;timeLine<input.length; timeLine++){\n    if (input[timeLine].id==uniqueGuards[guard]){\n    //  debugger;\n      totalMinutesCount=totalMinutesCount+input[timeLine].totalMinutesPerDay;\n    }\n    \n  }\n  totalSleeping.push(totalMinutesCount);\n  //console.log(\"total minutesCount\",totalMinutesCount);\n  \n  //console.log(\"total minutes count\", totalSleeping);\n}\nfor (let guy=0;guy<uniqueGuards.length;guy++){\nif (totalSleeping[guy] >maxSleepTime){\n  maxSleepTime=totalSleeping[guy];\n  maxSleepId=uniqueGuards[guy];\n}\n}\n//console.log(\"total sleeping times\", totalSleeping);\n//console.log(\"maxSleeptime\", maxSleepTime);\n//console.log(\"maxSleepID\", maxSleepId);\n\nlet finalCalculation=analyzeDays(input, maxSleepId);\n//console.log(analyzedDay);\n*/\nlet maxMinuteID;\nlet maxMinuteCount=0;\nlet maxGuardID;\nfor (let iteration=0; iteration<frequencyArray.length; iteration++){\n  for (let m=0;m<frequencyArray[iteration].length; m++){\n    if (frequencyArray[iteration][m]>maxMinuteCount){\n    // debugger;\n     maxMinuteCount=frequencyArray[iteration][m];\n     maxMinuteID=m;\n     maxGuardID=uniqueGuards[iteration];\n    // console.log(\"Maxes\", maxMinuteID, maxMinuteCount, maxGuardID);\n    }\n  }\n}\nconsole.log(\"Maxes\", maxMinuteID, maxMinuteCount, maxGuardID);\nlet finalMultiplication=maxGuardID*maxMinuteID;\n  return finalMultiplication;\n}\n\nfunction checkUniqueGuards(observe){\n  var uniqueArray=[];\n  for (let i=0; i<observe.length;i++)\n    if (!uniqueArray.includes(observe[i].id)){\n      uniqueArray.push(observe[i].id);\n\n    }\n   // console.log(uniqueArray);\n  return uniqueArray;\n}\n\nfunction analyzeDays(dataSet, maxSleeper){\n  let dayStatistics=[];\n      for (let minute=0; minute<60; minute++){\n       dayStatistics.push(0);\n      }\nfor (let row=0;row<dataSet.length;row++){\n//  debugger;\nif (parseInt(dataSet[row].id)==maxSleeper){\n  for (let day=0;day<dataSet[row].times.length;day++)\n   dayStatistics[day]=dayStatistics[day]+dataSet[row].times[day];\n}\n}\n//console.log(dataSet);\n//console.log(dayStatistics);\n\nlet maxDay=0;\nlet maxDayID;\nfor (let value=0;value<dayStatistics.length;value++){\n  if (dayStatistics[value]>maxDay){\n    maxDay=dayStatistics[value];\n    maxDayID=value;\n  }\n}\n//console.log(\"max day value\", maxDay, \"max day ID\", maxDayID);\n//console.log(\"max sleepr\",maxSleeper);\nlet finalResult=maxDayID*maxSleeper;\n\n//console.log(finalResult);\n  return finalResult;\n}","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201805.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180501 = () => {\n//const [introPolymer, setIntroPolymer] = useState(data[0]);\n//const [introPolymer, setIntroPolymer] = useState(\"dabAcCaCBAcCcaDA\");\n// CORRECT ANSWER is dabCBAcaDA\n// const [introPolymer, setIntroPolymer] = useState(\"bAcCa\");\n// CORRECT ANSWER is b\n// const [introPolymer, setIntroPolymer] = useState(\"aabAAB\");\n // CORRECT ANSWER is aabAAB\n// const [introPolymer, setIntroPolymer] = useState(\"abAB\");\n// CORRECT ANSWER is abAB\n//const [introPolymer, setIntroPolymer] = useState(\"abBA\");\n// CORRECT ANSWER is \"\"\n// const [introPolymer, setIntroPolymer] = useState(\"aA\");\n// CORRECT ANSWER is \"\"\n//const [introPolymer, setIntroPolymer] = useState(\"ddDabAcCaCBAcCcaDAxXxXaAnMmN\");\n//  CORRECT ANSWER IS dabCBAcaDA\n//const [introPolymer, setIntroPolymer] = useState(\"cPJjuVWwWwvEeRrfdvXxawTHDFfPVpGWwgPNeeDvcCkzDmjEeJbOtggVvTlCPpysSy\");\n// CORRECT ANSWER IS cPufdvawTHDPVNeeDvkzDmbOtggTlCyy\n\nconst[introPolymer, setIntroPolymer] = useState(data[0]);\n\n  const [result, setResult] = useState();\n\n  function handleClick() {\n    let output=polymerize(introPolymer).length;\n   setResult(output);\n  }\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Polymerization:</p>\n      <p>Length of end polymer is: {result} </p>\n      <button style={{ backgroundColor: \"#69747C\" }} ><span onClick={handleClick}>Polymerize</span>\n      </button>\n      \n    </div>\n  );\n};\n\nfunction generateArray(){\nlet string =\"abcdefghijklmnopqrstuvwxyz\";\nlet array=string.split(\"\");\nlet arrayCapital=string.toUpperCase().split(\"\");\nlet combinations={};\nfor ( let i=0;i<array.length;i++){\n let char=array[i]+arrayCapital[i];\n let char2=arrayCapital[i]+array[i];\n// console.log(char, char2);\n combinations[char]=\"value\";\n combinations[char2]=\"value\";\n\n}\n//console.log(combinations);\nreturn combinations;\n}\n\nfunction polymerize(input){\n  let units= generateArray();\n // console.log(units);\n let inputPolymer=input;\n  let result = recursion(units, inputPolymer);\n // console.log(\"result is:\", result);\n  \n  return result;\n}\n\nfunction recursion (units, inputPolymer){\n  for (let j=0;j<inputPolymer.length-1;j++){\n   //console.log(\"iteration j=\", j);\n    let element = inputPolymer[j]+inputPolymer[j+1];\n  //  console.log(element);\n  //debugger;\n    if (units[element]==\"value\"){\n//console.log(\"i include\", element);\nlet part1 = inputPolymer.slice(0,j);\nlet part2 = inputPolymer.slice(j+2,inputPolymer.length);\ninputPolymer=part1+part2;\n//console.log (inputPolymer);\nj=j-2;\n//console.log(j)\n}\n  }\n  return inputPolymer\n}\n\n/* NOT FUNCTIONAL RECURSION FUNCTION after returning \nfunction recursion (units, inputPolymer){\n  let k=0;\n//  let newInputPolymer=inputPolymer;\n  if (k>inputPolymer.length-1){ \n    console.log(\"break out condition is triggered\");\n  return\n  };\n  if (k==inputPolymer.length-1) {\n    console.log(\"last condition is triggered\");\n    return inputPolymer};\n  for (let j=0;j<inputPolymer.length-1;j++){\n    debugger;\n    k=j;\n    console.log(\"iteration j=\", j);\n    let element = inputPolymer[j]+inputPolymer[j+1];\n  //  console.log(element);\n    if (units.includes(element)){\nconsole.log(\"i include\", element);\nlet part1 = inputPolymer.slice(0,j);\nlet part2 = inputPolymer.slice(j+2,inputPolymer.length);\ninputPolymer=part1+part2;\nconsole.log (inputPolymer);\nreturn recursion (units, inputPolymer);\n    }\n  }\nreturn inputPolymer;\n}\n*/\n\n/* nots from Samik: use for loop but add, break out clausee with BREAK\nuse scoped variabl above forloop to get indecx, for loop will wet that scopd variabl\noutside of for look I will sreate new string (do not mutatee original) and then I call reecursion again\nreturn recursion (units, newNEWarray) newNEWarray consist of part 1 and 2\n115 there shouldnt be 115 line not mor return !!!!!! will b rplaced by return reecursion\n\nline 93 is always 0 bcause it is BEFOR for loop, if should be aftr for loop\n\nwhen\n\n*/","import React, { useState } from \"react\";\nimport data from \"./AdventCodeInputs/CodeAdvent201805.json\";\nimport \"./component.css\";\n\nexport const CodeAdvent20180502 = () => {\n// const [introPolymer, setIntroPolymer] = useState(\"dabAcCaCBAcCcaDA\");\n\n\nconst[introPolymer, setIntroPolymer] = useState(data[0]);\n\n  const [result, setResult] = useState();\n\n  function handleClick() {\n    let output=polymerize(introPolymer);\n   setResult(output);\n  }\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\" }}>Polymerization:</p>\n      <p>Length of shortest polymer is: {result} </p>\n      <button style={{ backgroundColor: \"#6BAA75\" }} ><span onClick={handleClick}>Polymerize</span>\n      </button>\n      \n    </div>\n  );\n};\n\nfunction generateArray(array, arrayCapital){\nlet combinations={};\nfor ( let i=0;i<array.length;i++){\n let char=array[i]+arrayCapital[i];\n let char2=arrayCapital[i]+array[i];\n// console.log(char, char2);\n combinations[char]=\"value\";\n combinations[char2]=\"value\";\n\n}\n//console.log(combinations);\nreturn combinations;\n}\n\nfunction polymerize(input){\n  let string =\"abcdefghijklmnopqrstuvwxyz\";\n  let array=string.split(\"\");\n  let arrayCapital=string.toUpperCase().split(\"\");\n  let units= generateArray(array, arrayCapital);\nlet resultsArray=[];\nlet dict={}\nfor (let char=0; char<array.length;char++){\n  let dict={}\nlet replacingChar=array[char]+\"|\"+arrayCapital[char];\n  //console.log(\"replacing Char\", replacingChar);\n   var re = new RegExp(replacingChar,\"g\");\n   //console.log(\"regex\", re);\n   let newArray=input.replace(re, \"\");\n   //console.log(newArray);\n   var result = poly(units, newArray);\n  dict.letter=array[char];\n  dict.polymer=result;\n  dict.len=result.length;\n  //console.log(\"dict\", dict);\n  resultsArray.push(dict);\n // console.log(\"resultsArray\", resultsArray);\n\n}\nlet min=input.length;\nfor (let entry=0;entry<resultsArray.length;entry++){\n  if(resultsArray[entry].len<min){\n    min=resultsArray[entry].len;\n  }\n}\n//console.log(\"min\",min);\n  return min;\n}\n\nfunction poly (units, inputPolymer){\n\n\n  for (let j=0;j<inputPolymer.length-1;j++){\n   //console.log(\"iteration j=\", j);\n    let element = inputPolymer[j]+inputPolymer[j+1];\n  //  console.log(element);\n  //debugger;\n    if (units[element]==\"value\"){\n//console.log(\"i include\", element);\nlet part1 = inputPolymer.slice(0,j);\nlet part2 = inputPolymer.slice(j+2,inputPolymer.length);\ninputPolymer=part1+part2;\n//console.log (inputPolymer);\nj=j-2;\n//console.log(j)\n}\n  }\n  return inputPolymer\n}\n","import React, { useState } from \"react\";\r\nimport data from \"./AdventCodeInputs/CodeAdvent201806.json\";\r\nimport \"./component.css\";\r\n\r\nexport const CodeAdvent20180601 = () => {\r\nconst[introCoordinates, setIntroCoordinates] = useState(data);\r\n/*const[introCoordinates, setIntroCoordinates] = useState([\r\n[1, 1],\r\n[1, 6],\r\n[8, 3],\r\n[3, 4],\r\n[5, 5],\r\n[8, 9],\r\n]);\r\n*/\r\n\r\n  const [result, setResult] = useState();\r\n\r\n  function handleClick() {\r\n    let output=computeArea(introCoordinates);\r\n    setResult(output);\r\n  }\r\n  return (\r\n    <div>\r\n      <p style={{ fontWeight: \"bold\" }}>Chronal Coordinates:</p>\r\n      <p>Size of largest area: {result} </p>\r\n      <button style={{ backgroundColor: \"#A7A7A9\" }} ><span onClick={handleClick}>Compute area</span>\r\n      </button>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction computeArea(coordinates){\r\n  let max=findMax(coordinates);\r\n  let maximumRow=max[0];\r\n  let maximumColumn=max[1];\r\n  //console.log(\"maximum row:\", maximumRow, \"maximum column:\", maximumColumn);\r\n  let emptyMap=generateField(maximumRow, maximumColumn);\r\n  //console.log(\"empty map is\",emptyMap);\r\n\tlet coordinatesArray=generateIDs(coordinates);\r\n\t//console.log(\"coordinatesArray\", coordinatesArray)\r\n\tlet populatedMap=populateCoordinates(emptyMap, coordinatesArray);\r\n\t//console.log(\"populatedMap\", populatedMap);\r\n\tlet distanceMap=calculateDistances(populatedMap, coordinatesArray);\r\n\t//console.log(\"distanceMap\", distanceMap);\r\n  let eliminatedCoordinates=eliminateEdgeCoordinates(distanceMap);\r\n  let areaArray=calculateAreas(distanceMap, eliminatedCoordinates, coordinatesArray);\r\n  let largestArea=getLargestArea(areaArray);\r\n  //console.log(\"largest are name is\", largestArea[0], \"largest are count is\", largestArea[1]);\r\n\t\r\nreturn largestArea[1];\r\n}\r\n\r\nfunction findMax(input){\r\n\t//WORKS CORRECT\r\n  let maxRow=0;\r\n  let maxColumn=0;\r\n\tfor ( let i =0; i<input.length;i++){\r\n\t\tif (input[i][1]>maxRow){\r\n\t\t\tmaxRow=input[i][1];\r\n\t\t}\r\n\t\tif (input[i][0]>maxColumn){\r\n\t\t\tmaxColumn=input[i][0];\r\n\t\t}\r\n  //console.log(\"maxRow is: \", maxRow, \"maxColumn is:\", maxColumn);\r\n\t}\r\n  let outcome=[maxRow,maxColumn];\r\n  return outcome;\r\n}\r\n  \r\n  function generateField(maxR, maxC){\r\n\t\t//WORKS CORRECT\r\n\t\tlet coordinateMap=[];\r\n\t\t\r\n      for ( let y=0;y<=maxR;y++){\r\n\t\t//\t\tconsole.log(\"y\", y);\r\n\t\t\tlet newRow= new Array(maxC+1);\r\n\t\t//\tconsole.log(\"newRow\", newRow);\r\n\t    for ( let x=0; x<=maxC;x++){\r\n\t\t//\t\tconsole.log(\"x\", x);\r\n\t\t\t newRow[x]=0;\r\n\t\t//\t console.log(\"newrow x\", newRow[x])\r\n\t   }\r\n\t   coordinateMap.push(newRow);\r\n\t  // console.log(\"coordinateMap is\", coordinateMap);\r\n   }\r\n   return coordinateMap;\r\n  }\r\n  \r\n  function generateIDs(coord){\r\n\t\t//WORK CORRECT\r\n    let idsLower=\"abcdefghijklmnopqrstuvwxyz\";\r\n    let idsUpper=idsLower.toUpperCase();\r\n    let ids=idsLower+idsUpper;\r\n    //console.log(\"ids are\", ids);\r\n    let idsArray=ids.split(\"\");\r\n    //console.log(\"ids array is\", idsArray);\r\n\tlet enrichedCoordinates=[];\r\n\tfor (let line=0; line<coord.length; line++){\r\n\t\tlet dict={};\r\n\t\tdict.id=idsArray[line];\r\n\t\tdict.value=coord[line];\r\n\t\tdict.areaCount=0;\r\n\t\tenrichedCoordinates.push(dict);\r\n\t}\r\n\t//console.log(\"enrichedCoordinates are\", enrichedCoordinates);\r\n\treturn enrichedCoordinates;\r\n  }\r\n  \r\n  function populateCoordinates( field, coords){\r\n\t\t//WORKS CORRECT\r\n\t\t//console.log(\"field is\", field);\r\n\t\t//console.log(\"coords are\", coords);\r\n\tfor (let entry=0;entry<coords.length;entry++){\r\n\t  field[coords[entry].value[1]][coords[entry].value[0]]=coords[entry].id;\r\n\t}\r\n\t\r\n\treturn field;\r\n  }\r\n  \r\n  function calculateDistances(mapWithCoords, arrayWithCoords ){\r\n    // WORKS CORRECT\r\n    //console.log(\"mapWithCoords\", mapWithCoords,\"arrayWithCoords\",arrayWithCoords )\r\n\t\tlet distanceArray=[];\r\n\t\t\r\n\t  for (let r=0;r<mapWithCoords.length;r++){\r\n\t    for (let c=0; c<mapWithCoords[r].length; c++){\r\n\t      let distanceDict={};\r\n\t      distanceArray.coordY=r;\r\n\t      distanceArray.coordX=c;\r\n\t      distanceArray.value=mapWithCoords[r][c];\r\n\t\t\t\tdistanceArray.distances=[];\r\n\t\t\t\t\r\n\t     // console.log(\"distance array\", distanceArray);\r\n\t      let minDistance=mapWithCoords.length+mapWithCoords[0].length;\r\n\t\t    let minID;\r\n\t\t    let dist={}\r\n\t      for (let coordInstance=0;coordInstance<arrayWithCoords.length;coordInstance++){\r\n\t\t      if (mapWithCoords[r][c]==0){\r\n\t\t        let pointDistance=Math.abs(r-arrayWithCoords[coordInstance].value[1]) + Math.abs(c-arrayWithCoords[coordInstance].value[0]);\r\n\t\t        let value=arrayWithCoords[coordInstance].id;\r\n\t\t\t\t\t\tdist[value]=pointDistance;\r\n\t \r\n\t\t if (pointDistance<=minDistance){\r\n\t\t   minDistance=pointDistance;\r\n\t\t   minID=arrayWithCoords[coordInstance].id;\r\n\t\t }\r\n\t\t}\r\n\t\t}\r\n\t\tdistanceArray.distances=dist;\r\n\t\tdistanceArray.minValue=minDistance;\r\n\t\t\r\n\t\tlet minIDs=[];\r\n\t\t\r\n\t\tObject.keys(distanceArray.distances).forEach(key=>{\r\n\t\t//\tconsole.log(`${key} : ${distanceArray.distances[key]}`);\r\n     // debugger;\r\n\t\t\tif (distanceArray.distances[key]==minDistance){\r\n\t\t\t\tminIDs.push(key);\r\n\t\t\t}\r\n\t });\r\n\r\n\t\tdistanceArray.minIDs=minIDs;\r\n\t\t//debugger;\r\n\t\t//console.log(\"minIDs are\", distanceArray.minIDs);\r\n\t\tif (distanceArray.minIDs.length>1){\r\n\t\t  mapWithCoords[r][c]=\".\"\r\n\t\t\r\n\t\t} else if (distanceArray.minIDs.length==1){\r\n\t\tmapWithCoords[r][c]=distanceArray.minIDs[0];\r\n\t\t\r\n\t\t}\r\n\t//\tconsole.log(distanceArray);\r\n\t  }\r\n\t}  \r\n\t\r\n\t//console.log(\"map with coords\", mapWithCoords);\r\n\t\r\n return mapWithCoords;\r\n\t}\r\n\t\r\n\r\n  function eliminateEdgeCoordinates(map){\r\n\t\t// WORKS CORRECT\r\n\t\tlet eliminated=[];\r\n\t\t\r\n\t  for (let row=0; row<map.length;row++){\r\n\t\t\t\r\n\t\t  if(!eliminated.includes(map[row][0])){\r\n\t\t  eliminated.push(map[row][0]);\r\n\t\t  //eliminated.push(map[row][map.length-1]);\r\n\t\t\t}\r\n\t\t\t\r\n\t  if(!eliminated.includes(map[row][(map[row].length-1)])){\r\n\t\t  eliminated.push(map[row][(map[row].length-1)]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t  for (let column=1; column<map[0].length; column++){\r\n\t\t  if(!eliminated.includes(map[0][column])){\r\n\t\t  eliminated.push(map[0][column]);\r\n\t\t  }\r\n\t\t  if(!eliminated.includes(map[map.length-1][column])){\r\n\t\t  eliminated.push(map[map.length-1][column]);\r\n\t\t  }\r\n\t  }\r\n\t\t//console.log(\"eliminated\", eliminated);\r\n\t  return eliminated;\r\n  }\r\n\r\n  function calculateAreas(map, eliminated, coordinatesArray){\r\n\t\t// WORKS CORRECT\r\n\t\tlet resultArray=[];\r\n\t\t\r\n\t  for (let id=0;id<coordinatesArray.length;id++){\r\n\t\t  let countArea=0;\r\n\t\t  if (!eliminated.includes(coordinatesArray[id].id)){\r\n\t\t\tfor (let r=0;r<map.length;r++){\r\n\t\t\t\tfor (let c=0; c<map[r].length; c++){ \r\n                if(map[r][c]==coordinatesArray[id].id){\r\n\t\t\t\t\tcountArea=countArea+1;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t }\r\n\t\t\t}\r\n\t\t\tlet dic={areaName: coordinatesArray[id], areaCount: countArea} \r\n        resultArray.push(dic);\r\n\t\t  }\r\n\t\t/*let dic={areaName: coordinatesArray[id], areaCount: countArea} \r\n        resultArray.push(dic);\t*/\t\r\n\t  }\r\n\t  //console.log(\"resultArray\", resultArray);\r\n\t  \r\n\t  return resultArray;\r\n  }\r\n  \r\n  function getLargestArea(areaArray){\r\n\t  let max=0;\r\n\t  let maxID;\r\n\t  for (let item=0;item<areaArray.length;item++){\r\n\t\t  if(areaArray[item].areaCount>max){\r\n\t\t\t  max=areaArray[item].areaCount;\r\n\t\t\t  maxID=areaArray[item].areaName.id;\r\n\t\t  }\r\n\t  }\r\n  let output=[maxID, max];\r\n //[{areaName: a, areaCount: 10}, \r\n //{areaName: b, areaCount: 5}]\r\n  //console.log(\"output is\", output);\r\n  return output;\r\n  }","import React, { useState } from \"react\";\r\nimport data from \"./AdventCodeInputs/CodeAdvent201806.json\";\r\nimport \"./component.css\";\r\n\r\nexport const CodeAdvent20180602 = () => {\r\nconst[introCoordinates, setIntroCoordinates] = useState(data);\r\n/*const[introCoordinates, setIntroCoordinates] = useState([\r\n[1, 1],\r\n[1, 6],\r\n[8, 3],\r\n[3, 4],\r\n[5, 5],\r\n[8, 9],\r\n]);\r\n*/\r\n  const [result, setResult] = useState();\r\n\r\n  function handleClick() {\r\n    let output=computeArea(introCoordinates);\r\n    setResult(output);\r\n  }\r\n  return (\r\n    <div>\r\n      <p style={{ fontWeight: \"bold\" }}>Chronal Coordinates:</p>\r\n      <p>Area smaller than thousand: {result} </p>\r\n      <button style={{ backgroundColor: \"#69747C\" }} ><span onClick={handleClick}>Compute area</span>\r\n      </button>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction computeArea(coordinates){\r\n  let max=findMax(coordinates);\r\n  let maximumRow=max[0];\r\n  let maximumColumn=max[1];\r\n  //console.log(\"maximum row:\", maximumRow, \"maximum column:\", maximumColumn);\r\n  let emptyMap=generateField(maximumRow, maximumColumn);\r\n  //console.log(\"empty map is\",emptyMap);\r\n\tlet coordinatesArray=generateIDs(coordinates);\r\n\t//console.log(\"coordinatesArray\", coordinatesArray)\r\n\tlet populatedMap=populateCoordinates(emptyMap, coordinatesArray);\r\n\t//console.log(\"populatedMap\", populatedMap);\r\n\tlet areaSize=calculateDistances(populatedMap, coordinatesArray);\r\n\r\nreturn areaSize;\r\n}\r\n\r\nfunction findMax(input){\r\n\t//WORKS CORRECT\r\n  let maxRow=0;\r\n  let maxColumn=0;\r\n\tfor ( let i =0; i<input.length;i++){\r\n\t\tif (input[i][1]>maxRow){\r\n\t\t\tmaxRow=input[i][1];\r\n\t\t}\r\n\t\tif (input[i][0]>maxColumn){\r\n\t\t\tmaxColumn=input[i][0];\r\n\t\t}\r\n  //console.log(\"maxRow is: \", maxRow, \"maxColumn is:\", maxColumn);\r\n\t}\r\n  let outcome=[maxRow,maxColumn];\r\n  return outcome;\r\n}\r\n  \r\n  function generateField(maxR, maxC){\r\n\t\t//WORKS CORRECT\r\n\t\tlet coordinateMap=[];\r\n\t\t\r\n      for ( let y=0;y<=maxR;y++){\r\n\t\t//\t\tconsole.log(\"y\", y);\r\n\t\t\tlet newRow= new Array(maxC+1);\r\n\t\t//\tconsole.log(\"newRow\", newRow);\r\n\t    for ( let x=0; x<=maxC;x++){\r\n\t\t//\t\tconsole.log(\"x\", x);\r\n\t\t\t newRow[x]=0;\r\n\t\t//\t console.log(\"newrow x\", newRow[x])\r\n\t   }\r\n\t   coordinateMap.push(newRow);\r\n\t//console.log(\"coordinateMap is\", coordinateMap);\r\n   }\r\n   return coordinateMap;\r\n  }\r\n  \r\n  function generateIDs(coord){\r\n\t\t//WORK CORRECT\r\n    let idsLower=\"abcdefghijklmnopqrstuvwxyz\";\r\n    let idsUpper=idsLower.toUpperCase();\r\n    let ids=idsLower+idsUpper;\r\n    //console.log(\"ids are\", ids);\r\n    let idsArray=ids.split(\"\");\r\n    //console.log(\"ids array is\", idsArray);\r\n\tlet enrichedCoordinates=[];\r\n\tfor (let line=0; line<coord.length; line++){\r\n\t\tlet dict={};\r\n\t\tdict.id=idsArray[line];\r\n\t\tdict.value=coord[line];\r\n\t\tdict.areaCount=0;\r\n\t\tenrichedCoordinates.push(dict);\r\n\t}\r\n\t//console.log(\"enrichedCoordinates are\", enrichedCoordinates);\r\n\treturn enrichedCoordinates;\r\n  }\r\n  \r\n  function populateCoordinates( field, coords){\r\n\t\t//WORKS CORRECT\r\n\t\t//console.log(\"field is\", field);\r\n\t\t//console.log(\"coords are\", coords);\r\n\tfor (let entry=0;entry<coords.length;entry++){\r\n\t  field[coords[entry].value[1]][coords[entry].value[0]]=coords[entry].id;\r\n\t}\r\n\t//console.log(\"field\", field);\r\n\treturn field;\r\n  }\r\n  \r\n  function calculateDistances(mapWithCoords, arrayWithCoords ){\r\n    // WORKS CORRECT\r\n    //console.log(\"mapWithCoords\", mapWithCoords,\"arrayWithCoords\",arrayWithCoords )\r\n\t\tlet distanceArray=[];\r\n\t\tlet countArea=0;\r\n\t  for (let r=0;r<mapWithCoords.length;r++){\r\n\t    for (let c=0; c<mapWithCoords[r].length; c++){\r\n\t      let distanceDict={};\r\n\t      distanceDict.coordY=r;\r\n\t      distanceDict.coordX=c;\r\n\t      distanceDict.value=mapWithCoords[r][c];\r\n\t\t\t\tdistanceDict.distances={};\r\n\t\t\t\tdistanceDict.sumDist=0;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfor (let coordInstance=0;coordInstance<arrayWithCoords.length;coordInstance++){\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet pointDistance=Math.abs(r-arrayWithCoords[coordInstance].value[1]) + Math.abs(c-arrayWithCoords[coordInstance].value[0]);\r\n\t\t\t\t\t//console.log(\"pointDistance is\", pointDistance, \"from coord\", arrayWithCoords[coordInstance].id);\r\n\t\t\t\t\tdistanceDict.distances[arrayWithCoords[coordInstance].id]=pointDistance;\r\n\t\t\t\t\tdistanceDict.sumDist=distanceDict.sumDist+pointDistance;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (distanceDict.sumDist<10000){\r\n\t\t\t\t\tdistanceDict.value=1;\r\n\t\t\t\t\tcountArea+=1;\r\n\t\t\t\t}\r\n\t\t\t\tdistanceArray.push(distanceDict);\r\n\t\t  }\t\r\n\t\t}\r\n\t\t\t// console.log(\"distance array\", distanceArray);\r\n\t\t\t// console.log(\"countArea\", countArea);\r\n\r\n return countArea;\r\n\t}","import React, { useState } from \"react\";\r\nimport data from \"./AdventCodeInputs/CodeAdvent201807.json\";\r\nimport \"./component.css\";\r\n\r\nexport const CodeAdvent20180701 = () => {\r\n//const[instructions, setInstructions] = useState(data);\r\nconst[instructions, setInstructions] = useState([\r\n\"Step C must be finished before step A can begin.\",\r\n\"Step C must be finished before step F can begin.\",\r\n\"Step A must be finished before step B can begin.\",\r\n\"Step A must be finished before step D can begin.\",\r\n\"Step B must be finished before step E can begin.\",\r\n\"Step D must be finished before step E can begin.\",\r\n\"Step F must be finished before step E can begin.\",\r\n]);\r\n\r\n  const [result, setResult] = useState();\r\n\r\n  function handleClick() {\r\n    let output=topologicalSort(instructions);\r\n   setResult(output);\r\n  }\r\n  return (\r\n    <div>\r\n      <p style={{ fontWeight: \"bold\" }}>Topological Sort:</p>\r\n      <p>Instructions order: {result} </p>\r\n      <button style={{ backgroundColor: \"#6BAA75\" }} ><span onClick={handleClick}>Compute order</span>\r\n      </button>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction topologicalSort(steps){\r\n\tsteps.sort();\r\n//\tconsole.log(steps);\r\n\t/*expected result:\r\n\t[\r\n\"Step A must be finished before step B can begin.\",\r\n\"Step A must be finished before step D can begin.\",\r\n\"Step B must be finished before step E can begin.\",\r\n\"Step C must be finished before step A can begin.\",\r\n\"Step C must be finished before step F can begin.\",\r\n\"Step D must be finished before step E can begin.\",\r\n\"Step F must be finished before step E can begin.\",\r\n]\r\n\t*/\r\n\tlet stepsDict= generateDict(steps);\r\n\tlet sortedKeys= generateSortedDictKeys(stepsDict);\r\n\tlet sortedDict=generateSortedDependenciesArray(stepsDict, sortedKeys);\r\n  //  console.log(\"stepsDict\", stepsDict);\r\n\t//walkTheGraph(sortedDict, sortedKeys);\r\nreturn 0;\r\n}\r\n\r\nfunction generateDict(input){\r\n\t//PROBLEM HERE\r\n\t/*\r\n\t{A: [C], B:[A], C: [], D: [A], E:[B, D, F], F:[C]};\r\n\t\r\n\t*/\r\n\tlet deptDict={};\r\n\tfor (let i of input){\r\n\t\t//console.log(i);\r\n\t\tlet edgeEnd=i.indexOf(\" must\");\r\n\t\t//console.log(\"edgeEnd\", edgeEnd);\r\n\t\tlet edgeStart=edgeEnd-1;\r\n\t\t//console.log(\"edgeStart\", edgeStart);\r\n\t\t//debugger;\r\n\t\tlet edge=i.slice(edgeStart,edgeEnd);\r\n\t\t//console.log(\"edge\", edge);\r\n\t\tlet nodeEnd=i.indexOf(\" can\");\r\n\t\tlet nodeStart=nodeEnd-1;\r\n\t\tdebugger;\r\n\t\tlet node=i.slice(nodeStart,nodeEnd);\r\n\t\tconsole.log(\"node is\", node);\r\n\t\t\r\n\t\tif ( node in deptDict){\r\n\t\tdeptDict[node].push(edge);\r\n\t\t}\r\n\t\telse {\r\n\t\t  deptDict[node]=[edge];\r\n\t\t\t}\r\n\t}\r\n\t//console.log(\"dependency dictionary\",deptDict);\r\n\treturn deptDict;\r\n}\r\n\r\nfunction generateSortedDictKeys(input){\r\n\tlet dictKeys= Object.keys(input);\r\n\t//SORT Function\r\n\tlet sortedKeys=dictKeys.sort();\r\n\treturn sortedKeys;\r\n}\r\n\r\n\r\nfunction generateSortedDependenciesArray(input, dictKey){\r\n\t/* input\r\n\t   {A: [C], B:[A], C: [], D: [A], E:[F, B, D], F:[C]};\r\n\t*/\r\n\t\r\n\t/* dictKey\r\n\t   [A,B,C,D,E,F]\r\n\t*/\r\n\t\r\n\tfor ( let k of dictKey){\r\n\t\tinput[k].sort();\r\n\t\r\n\t}\r\n//\tconsole.log(input);\r\n\t// Expected result:\r\n\t// {A: [C], B:[A], C: [], D: [A], E:[B, D, F], F:[C]};\r\n\treturn input;\r\n\t\r\n}\r\n\r\nfunction walkTheGraph(dic, key){\r\n\t/* dic \r\n\t   {A: [C], B:[A], C: [], D: [A], E:[B, D, F], F:[C]};\r\n\t*/\r\n\t\r\n\t/* key\r\n\t   [A,B,C,D,E,F]\r\n\t*/\r\n\tfor (let item of key){\r\n\t\tconsole.log(\"item is:\", item);\r\n\t  for ( let lineItem of dic[item]){\r\n\t\t//  console.log(\"lineItem is\", lineItem);\r\n\t\t  walkTheGraph(dic, dic[item]);\r\n\t  } \r\n\t/* Expected result:\r\n\t   [A, C, B, A, C, C, D, A, C, E, B, A, C, D, A, C, F, C, E, F, C]\r\n\t*/\r\n\t}\r\n}\r\n\r\nfunction singleKeyWalk(dic, singleKey, resolved){\r\n\tconsole.log(singleKey);\r\n\tfor ( let lineItem of dic[singleKey]){\r\n\t\t//  console.log(\"lineItem is\", lineItem);\r\n\t\t  walkTheGraph(dic, lineItem, resolved);\r\n\t  } \r\n\tresolved.push(singleKey)\r\n}","import React from \"react\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Bootstrap, Row, Col, Container } from \"react-bootstrap\";\nimport { CodeAdvent20190101 } from \"../components/codeAdvent20190101.js\";\nimport { CodeAdvent20190102 } from \"../components/codeAdvent20190102.js\";\nimport { CodeAdvent20190201 } from \"../components/codeAdvent20190201.js\";\nimport { CodeAdvent20190202 } from \"../components/codeAdvent20190202.js\";\nimport { CodeAdvent20190301 } from \"../components/codeAdvent20190301.js\";\nimport { CodeAdvent20180101 } from \"../components/codeAdvent20180101.js\";\nimport { CodeAdvent20180102 } from \"../components/codeAdvent20180102.js\";\nimport { CodeAdvent20180201 } from \"../components/codeAdvent20180201.js\";\nimport { CodeAdvent20180202 } from \"../components/codeAdvent20180202.js\";\nimport { CodeAdvent20180301 } from \"../components/codeAdvent20180301.js\";\nimport { CodeAdvent20180401 } from \"../components/codeAdvent20180401.js\";\nimport { CodeAdvent20180402 } from \"../components/codeAdvent20180402.js\";\nimport { CodeAdvent20180501 } from \"../components/codeAdvent20180501.js\";\nimport { CodeAdvent20180502 } from \"../components/codeAdvent20180502.js\";\nimport { CodeAdvent20180601 } from \"../components/codeAdvent20180601.js\";\nimport { CodeAdvent20180602 } from \"../components/codeAdvent20180602.js\";\nimport { CodeAdvent20180701 } from \"../components/codeAdvent20180701.js\";\n//import Background from './advent.jpg';\n\n/* COLOUR PALETTE\n\nButtons:\n#6BAA75\n#A7A7A9\n#69747C\n\nBorder:\n#E8E8EA\n\nMore:\n#C1EDCC\n#B0C0BC\n\n*/\n\nexport default() =>\n    <div className=\"App\">\n      <Container>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n        <Col sm={9}><h2 style={{margin: \"30px 0px\", textAlign: \"left\", color:\"#C1EDCC\"}}>Advent of Code</h2></Col>\n        <Col sm={3}><h2 style={{margin: \"30px 0px\", textAlign: \"right\", color:\"#C1EDCC\"}}>Addania</h2></Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n          </Col>\n          <Col sm={9}>\n             <h2 style={{margin: \"30px 0px\", textAlign: \"center\", color:\"#C1EDCC\"}}>YEAR 2019</h2>\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3} ><p>Task 2019 01 01</p>\n            <a href=\"https://adventofcode.com/2019/day/1\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          \n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20190101 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3} ><p>Task 2019 01 02</p>\n            <a href=\"https://adventofcode.com/2019/day/1\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          \n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20190102 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3} ><p>Task 2019 02 01</p>\n            <a href=\"https://adventofcode.com/2019/day/2\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          \n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20190201 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3} ><p>Task 2019 02 02</p>\n            <a href=\"https://adventofcode.com/2019/day/2\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          \n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20190202 />\n          </Col>\n          </Row>\n          <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3} ><p>Task 2019 03 01</p>\n            <a href=\"https://adventofcode.com/2019/day/3\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          \n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20190301 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n          </Col>\n          <Col sm={9}>\n             <h2 style={{margin: \"30px 0px\", textAlign: \"center\", color:\"#C1EDCC\"}}>YEAR 2018</h2>\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3} ><p>Task 2018 01 01</p>\n            <a href=\"https://adventofcode.com/2018/day/1\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          \n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180101 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}><p>Task 2018 01 02</p>\n            <a href=\"https://adventofcode.com/2018/day/1\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180102 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}><p>Task 2018 02 01</p>\n            <a href=\"https://adventofcode.com/2018/day/2\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180201 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}><p>Task 2018 02 02</p>\n            <a href=\"https://adventofcode.com/2018/day/2\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180202 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}><p>Task 2018 03 01+02</p>\n            <a href=\"https://adventofcode.com/2018/day/3\" style={{fontSize: \"12px\"}}>Go to task</a></Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180301 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 04 01</p>\n            <a href=\"https://adventofcode.com/2018/day/4\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180401 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 04 02</p>\n            <a href=\"https://adventofcode.com/2018/day/4\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180402 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 05 01</p>\n            <a href=\"https://adventofcode.com/2018/day/5\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180501 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 05 02</p>\n            <a href=\"https://adventofcode.com/2018/day/5\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180502 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 06 01</p>\n            <a href=\"https://adventofcode.com/2018/day/6\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180601 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 06 02</p>\n            <a href=\"https://adventofcode.com/2018/day/6\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180602 />\n          </Col>\n        </Row>\n        <Row style={{ borderBottom: \"0.5px solid #E8E8EA\" }}>\n          <Col sm={3}>\n            <p>Task 2018 07 01</p>\n            <a href=\"https://adventofcode.com/2018/day/6\" style={{fontSize: \"12px\"}}>Go to task</a>\n          </Col>\n          <Col sm={9} style={{ maxWidth: \"100%\" }}>\n            <CodeAdvent20180701 />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}